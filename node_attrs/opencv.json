{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/196997350.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/199653283.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/211748382.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231727358.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.4.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/239285665.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/240751778.json"
   },
   "data": {
    "bot_rerun": 1579272528.0979571,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/241367422.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262271937.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "BlasRebuild",
    "migrator_version": 0,
    "name": "blas2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/268233135.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/273673374.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "qt-5.9.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/285620251.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "hdf5-1.10.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/301412331.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/305698857.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Rebuild",
    "migrator_version": 0,
    "name": "qt-5.12"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/326705928.json"
   },
   "data": {
    "bot_rerun": 1579272528.0983808,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/327878403.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg41"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/328785463.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.1.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/336076898.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/342799427.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libtiff-4.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/356493907.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "4.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400897022.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404042561.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg42"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/404114838.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/444465113.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg43"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/501424092.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/520312225.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/543681955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "glib2646"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/547805276.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/551253658.json"
   },
   "data": {
    "bot_rerun": 1610140916.439504,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/553862119.json"
   },
   "data": {
    "bot_rerun": 1610511854.0952015,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/559876354.json"
   },
   "data": {
    "bot_rerun": 1612628132.7859018,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/570079155.json"
   },
   "data": {
    "bot_rerun": 1617713485.7609453,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/650714458.json"
   },
   "data": {
    "bot_rerun": 1624565589.4203968,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/677329439.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf316"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/685618690.json"
   },
   "data": {
    "bot_rerun": 1639002597.4629848,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/749944301.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf318"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750793013.json"
   },
   "data": {
    "bot_rerun": 1633527772.5510976,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "jasper2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/750796398.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51121"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/752077511.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "harfbuzz3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/754499812.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "jasper2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/773082326.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/798966316.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf319"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/882207356.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "harfbuzz4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/889013640.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg44"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905046016.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf320"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905261349.json"
   },
   "data": {
    "bot_rerun": 1650970651.8870711,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/905276210.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "ffmpeg5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/919507937.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957666975.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "qt515"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/44670233-ebea-40f7-a3fe-2303d649081c.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "ffmpeg44"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1009114492.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "harfbuzz5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1010234035.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51122"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1038740002.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "libprotobuf321"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1096440685.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "ffmpeg5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1100772998.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python311"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1169961235.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "harfbuzz6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "opencv",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "ignore_run_exports_from": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "7",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py38h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.6.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt-main",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip",
    "pkg-config"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "ignore_run_exports_from": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "7",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py39h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.6.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt-main",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip",
    "pkg-config"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "ignore_run_exports_from": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "7",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py310h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.6.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip",
    "pkg-config"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "ignore_run_exports_from": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "7",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py39h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.6.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "freetype",
    "freetype",
    "freetype",
    "freetype",
    "freetype",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  }
 },
 "name": "libopencv",
 "new_version": "4.6.0",
 "new_version_attempts": {
  "4.3.0": 796,
  "4.5.0": 16,
  "4.5.0-openvino": 23,
  "4.5.1": 194,
  "4.5.2": 45,
  "4.5.3": 71,
  "4.5.4": 45,
  "4.5.5": 36
 },
 "new_version_errors": {
  "4.3.0": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 101, column 5:\n        requires:\n        ^ (line: 101)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 119, column 20:\n                \"aruco\",\n                       ^ (line: 119)",
  "4.5.0": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 97, column 5:\n        requires:\n        ^ (line: 97)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 115, column 20:\n                \"aruco\",\n                       ^ (line: 115)",
  "4.5.0-openvino": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 93, column 5:\n        requires:\n        ^ (line: 93)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 111, column 20:\n                \"aruco\",\n                       ^ (line: 111)",
  "4.5.1": "We found a problem parsing the recipe: \n\nwhile parsing a block mapping\n  in \"<unicode string>\", line 107, column 5:\n        requires:\n        ^ (line: 107)\nexpected <block end>, but found ','\n  in \"<unicode string>\", line 125, column 20:\n                \"aruco\",\n                       ^ (line: 125)",
  "4.5.2": "We found a problem parsing the recipe for version '4.5.2': \n\nParserError('while parsing a block mapping', <ruamel.yaml.error.StringMark object at 0x7fc29a92edd0>, \"expected <block end>, but found '<block sequence start>'\", <ruamel.yaml.error.StringMark object at 0x7fc28b303740>)\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 343, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 111, in get_single_data\n    node = self.composer.get_single_node()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 78, in get_single_node\n    document = self.compose_document()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 101, in compose_document\n    node = self.compose_node(None, None)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 138, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 218, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 138, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 211, in compose_mapping_node\n    while not self.parser.check_event(MappingEndEvent):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 140, in check_event\n    self.current_event = self.state()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 585, in parse_block_mapping_key\n    raise ParserError(\n",
  "4.5.3": "We found a problem parsing the recipe for version '4.5.3': \n\nParserError('while parsing a block mapping',   in \"<unicode string>\", line 111, column 5:\n        requires:\n        ^ (line: 111), \"expected <block end>, but found '<block sequence start>'\",   in \"<unicode string>\", line 183, column 9:\n            - export CONDA_BUILD_SYSROOT=<{  ... \n            ^ (line: 183))\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 506, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 120, in get_single_data\n    node = self.composer.get_single_node()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 76, in get_single_node\n    document = self.compose_document()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 99, in compose_document\n    node = self.compose_node(None, None)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 223, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 216, in compose_mapping_node\n    while not self.parser.check_event(MappingEndEvent):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 146, in check_event\n    self.current_event = self.state()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 611, in parse_block_mapping_key\n    raise ParserError(\n",
  "4.5.4": "We found a problem parsing the recipe for version '4.5.4': \n\nParserError('while parsing a block mapping',   in \"<unicode string>\", line 114, column 5:\n        requires:\n        ^ (line: 114), \"expected <block end>, but found '<block sequence start>'\",   in \"<unicode string>\", line 186, column 9:\n            - export CONDA_BUILD_SYSROOT=<{  ... \n            ^ (line: 186))\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 119, in get_single_data\n    node = self.composer.get_single_node()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 76, in get_single_node\n    document = self.compose_document()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 99, in compose_document\n    node = self.compose_node(None, None)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 223, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 216, in compose_mapping_node\n    while not self.parser.check_event(MappingEndEvent):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 146, in check_event\n    self.current_event = self.state()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 611, in parse_block_mapping_key\n    raise ParserError(\n",
  "4.5.5": "We found a problem parsing the recipe for version '4.5.5': \n\nParserError('while parsing a block mapping',   in \"<unicode string>\", line 114, column 5:\n        requires:\n        ^ (line: 114), \"expected <block end>, but found '<block sequence start>'\",   in \"<unicode string>\", line 186, column 9:\n            - export CONDA_BUILD_SYSROOT=<{  ... \n            ^ (line: 186))\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 465, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 119, in get_single_data\n    node = self.composer.get_single_node()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 76, in get_single_node\n    document = self.compose_document()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 99, in compose_document\n    node = self.compose_node(None, None)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 223, in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 143, in compose_node\n    node = self.compose_mapping_node(anchor)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/composer.py\", line 216, in compose_mapping_node\n    while not self.parser.check_event(MappingEndEvent):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 146, in check_event\n    self.current_event = self.state()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/parser.py\", line 612, in parse_block_mapping_key\n    raise ParserError(\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "ignore_run_exports_from": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "7",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py38h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.6.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip",
    "pkg-config"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "ignore_run_exports_from": [
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "7",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py39h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list",
      "test $(pip list | grep opencv-python | wc -l) -eq 1"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.6.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf",
    "python",
    "numpy",
    "hdf5",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "glib",
    "libprotobuf"
   ],
   "run": [
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype",
    "harfbuzz",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CONDA_BUILD_SYSROOT=",
    "OPENCV_FLAGS=`pkg-config --cflags opencv4`",
    "$CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test",
    "if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi",
    "test -f $PREFIX/lib/libopencv_alphamat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_aruco${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bgsegm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_calib3d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ccalib${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_core${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_datasets${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dnn${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_dpm${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_face${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_features2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_flann${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_fuzzy${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_gapi${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hfs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_highgui${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_img_hash${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgcodecs${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_imgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_intensity_transform${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_line_descriptor${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_mcc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ml${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_objdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_optflow${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_phase_unwrapping${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_photo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_plot${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_quality${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rapid${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_reg${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_rgbd${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_saliency${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_shape${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stereo${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_stitching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_structured_light${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_superres${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_surface_matching${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_text${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_tracking${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_video${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videoio${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_videostab${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_wechat_qrcode${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xfeatures2d${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_ximgproc${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xobjdetect${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_xphoto${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip",
    "pkg-config"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libopencv",
   "opencv",
   "py-opencv"
  ]
 },
 "pinning_version": "2022.12.18.16.04.29",
 "pre_pr_migrator_attempts": {
  "aarch64andppc64leaddition": 1,
  "glib2646": 1,
  "pypy37-windows": 1,
  "python39": 1
 },
 "pre_pr_migrator_status": {
  "aarch64andppc64leaddition": "bot error: master: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1008, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 187, in run\n    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/arch.py\", line 123, in migrate\n    y = safe_load(f)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/main.py\", line 996, in safe_load\n    return load(stream, SafeLoader, version)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/main.py\", line 951, in load\n    return loader._constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 723, in construct_yaml_map\n    value = self.construct_mapping(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 440, in construct_mapping\n    return BaseConstructor.construct_mapping(self, node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 257, in construct_mapping\n    if self.check_mapping_key(node, key_node, mapping, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"conda-forge.yml\", line 1, column 1\nfound duplicate key \"provider\" with value \"{}\" (original value: \"{}\")\n  in \"conda-forge.yml\", line 4, column 1\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n\n",
  "glib2646": "not solvable: master: ['linux_64_numpy1.16python3.6.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: cannot install both liblapack-3.9.0-0_h6e990d7_netlib and liblapack-3.8.0-4_mkl\\n', 'linux_64_numpy1.16python3.7.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.16python3.8.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.18python3.6.____73_pypy: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: nothing provides requested libllvm8 8.0.1.* 0\\n']",
  "pypy37-windows": "not solvable (<a href=\"https://github.com/regro/autotick-bot/actions/runs/1005751336\">bot CI job</a>): master: ['linux_64_numpy1.17python3.6.____cpython: Encountered problems while solving:\\n  - nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.17python3.6.____cpython: Encountered problems while solving:\\n  - package qt-5.12.1-hbfa2a6e_0 requires gstreamer >=1.14.4,<1.15.0a0, but none of the providers can be installed\\n', 'linux_64_numpy1.17python3.7.____cpython: Encountered problems while solving:\\n  - nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.17python3.7.____cpython: Encountered problems while solving:\\n  - package qt-5.12.1-hbfa2a6e_0 requires gstreamer >=1.14.4,<1.15.0a0, but none of the providers can be installed\\n', 'linux_64_numpy1.17python3.8.____cpython: Encountered problems while solving:\\n  - nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.17python3.8.____cpython: Encountered problems while solving:\\n  - package qt-5.12.1-hbfa2a6e_0 requires gstreamer >=1.14.4,<1.15.0a0, but none of the providers can be installed\\n', 'linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - nothing provides requested libllvm8 8.0.1.* 0\\n', 'linux_64_numpy1.19python3.9.____cpython: Encountered problems while solving:\\n  - package qt-5.12.1-hbfa2a6e_0 requires gstreamer >=1.14.4,<1.15.0a0, but none of the providers can be installed\\n']",
  "python39": "not solvable: ['Encountered problems while solving.\\nProblem: package numpy-1.19.1-py36h5510c5b_0 requires python >=3.6,<3.7.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "# This recipe creates 3 packages\n# libopencv, py-opencv, opencv\n#\n# libopencv actually contains all the files, including the site-packages\n# file needed to run opencv with python.\n#     opencv-dnn seems to change on every patch version, therefore, we pin\n#     to the patch version x.x.x\n#\n# py-opencv is a meta package that constrains the python dependencies\n#     This one is pinned to the minor version. x.x\n#\n# opencv is a backward compatible package, with no pinnings\n#\n# This approach is different than the one in defaults. Default's package\n# seperates well the files generated with python dependencies, from those\n# generated without. Unfortunately, this isn't entirely supported by\n# upstream. Their hacks are quite elaborate, making it seem difficult to\n# maintain as opencv has been changing their build system recently.\n#\n# By putting all the generated files in 1 package, this makes the build process\n# much easier, at the expense of a few MBs in the 'lib' package.\n{% set version = \"4.6.0\" %}\n{% set PY_VER_MAJOR = PY_VER.split('.')[0] %}\n{% set PY_VER_MINOR = PY_VER.split('.')[1] %}\n\npackage:\n  name: libopencv\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/opencv/opencv/archive/{{ version }}.tar.gz\n    fn: opencv-{{ version }}.tar.gz\n    sha256: 1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277\n    patches:\n      # https://github.com/opencv/opencv/pull/21611\n      - install_pip_metadata.patch\n      - delete_lines_that_download_opencv.patch\n      - find_pkgconfig_windows.patch\n      - 22357-add-missing-header-for-libavcodec-version.patch\n  - url: https://github.com/opencv/opencv_contrib/archive/{{ version }}.tar.gz\n    fn: opencv_contrib-{{ version }}.tar.gz\n    sha256: 1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7\n    folder: opencv_contrib\n    patches:\n      # Allow attempt to find HDF5 on cross-compile\n      - cmake_hdf5_xpile.patch\n  - fn: test.avi\n    url: https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi\n    sha256: 78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310\n\nbuild:\n  number: 7\n  string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  run_exports:\n    # https://abi-laboratory.pro/index.php?view=timeline&l=opencv\n    # Things seem to change every patch versions, mostly the dnn module\n    - {{ pin_subpackage('libopencv', max_pin='x.x.x') }}\n  ignore_run_exports_from:\n    - python\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - libprotobuf                            # [build_platform != target_platform]\n    # pkg-config is required to find ffpmeg\n    - pkg-config\n    - cmake\n    - ninja\n    - libgomp                        # [linux]\n    # ICE when enabling this\n    # - llvm-openmp                    # [osx]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-libegl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}        # [linux]\n    - {{ cdt('libxdamage') }}        # [linux]\n    - {{ cdt('libxfixes') }}         # [linux]\n    - {{ cdt('libxxf86vm') }}        # [linux]\n  host:\n    - python\n    - numpy\n    - hdf5                           # [unix]\n    - eigen\n    - jasper\n    - zlib\n    - jpeg\n    - libtiff\n    - libwebp\n    - harfbuzz\n    - libpng\n    # Specify lgpl version of ffmpeg so that there are\n    # no quesitons about the license of the resulting opencv\n    # binary\n    - ffmpeg {{ ffmpeg }}=lgpl_*\n    - qt-main                             # [not osx and not ppc64le]\n    - liblapacke\n    - liblapack\n    - libcblas\n    - freetype\n    - glib                           # [unix]\n    - libprotobuf\n  run:\n    # https://github.com/conda-forge/harfbuzz-feedstock/pull/52\n    - harfbuzz                       # [unix]\n    # Don't depend on python in the run section\n    # py-opencv will depend on python\n    # https://github.com/conda-forge/opencv-feedstock/issues/174\n    # Seems like the OSX ABI has changed between 2.9 and 2.10???\n    # That or a dependency wasn't merged in\n    # Since we don't know the cause, we are choosing this pinning on all platforms.\n    - {{ pin_compatible('freetype', min_pin='x.x') }}\n\ntest:\n    requires:\n      - {{ compiler('c') }}\n      - {{ compiler('cxx') }}\n      - pkg-config                    # [not win]\n      # Test with the two currently supported lapack implementatons\n      # One test done on different versions of python on each platform\n      - liblapack * *openblas         # [py==36]\n      - liblapack * *mkl              # [py==37 and linux64]\n      - cmake\n      - ninja\n    files:\n      - CMakeLists.txt\n      - test.cpp\n    commands:\n        # Verify dynamic libraries on all systems\n        {% set win_ver_lib = version|replace(\".\", \"\") %}\n        # The bot doesn't support multiline jinja, so use\n        # single line jinja.\n        {% set opencv_libs = [] %}\n        {{ opencv_libs.append(\"alphamat\") or \"\" }}\n        {{ opencv_libs.append(\"aruco\") or \"\" }}\n        {{ opencv_libs.append(\"bgsegm\") or \"\" }}\n        {{ opencv_libs.append(\"calib3d\") or \"\" }}\n        {{ opencv_libs.append(\"ccalib\") or \"\" }}\n        {{ opencv_libs.append(\"core\") or \"\" }}\n        {{ opencv_libs.append(\"datasets\") or \"\" }}\n        {{ opencv_libs.append(\"dnn_objdetect\") or \"\" }}\n        {{ opencv_libs.append(\"dnn_superres\") or \"\" }}\n        {{ opencv_libs.append(\"dnn\") or \"\" }}\n        {{ opencv_libs.append(\"dpm\") or \"\" }}\n        {{ opencv_libs.append(\"face\") or \"\" }}\n        {{ opencv_libs.append(\"features2d\") or \"\" }}\n        {{ opencv_libs.append(\"flann\") or \"\" }}\n        {{ opencv_libs.append(\"fuzzy\") or \"\" }}\n        {{ opencv_libs.append(\"gapi\") or \"\" }}\n        {{ opencv_libs.append(\"hfs\") or \"\" }}\n        {{ opencv_libs.append(\"highgui\") or \"\" }}\n        {{ opencv_libs.append(\"img_hash\") or \"\" }}\n        {{ opencv_libs.append(\"imgcodecs\") or \"\" }}\n        {{ opencv_libs.append(\"imgproc\") or \"\" }}\n        {{ opencv_libs.append(\"intensity_transform\") or \"\" }}\n        {{ opencv_libs.append(\"line_descriptor\") or \"\" }}\n        {{ opencv_libs.append(\"mcc\") or \"\" }}\n        {{ opencv_libs.append(\"ml\") or \"\" }}\n        {{ opencv_libs.append(\"objdetect\") or \"\" }}\n        {{ opencv_libs.append(\"optflow\") or \"\" }}\n        {{ opencv_libs.append(\"phase_unwrapping\") or \"\" }}\n        {{ opencv_libs.append(\"photo\") or \"\" }}\n        {{ opencv_libs.append(\"plot\") or \"\" }}\n        {{ opencv_libs.append(\"quality\") or \"\" }}\n        {{ opencv_libs.append(\"rapid\") or \"\" }}\n        {{ opencv_libs.append(\"reg\") or \"\" }}\n        {{ opencv_libs.append(\"rgbd\") or \"\" }}\n        {{ opencv_libs.append(\"saliency\") or \"\" }}\n        {{ opencv_libs.append(\"shape\") or \"\" }}\n        {{ opencv_libs.append(\"stereo\") or \"\" }}\n        {{ opencv_libs.append(\"stitching\") or \"\" }}\n        {{ opencv_libs.append(\"structured_light\") or \"\" }}\n        {{ opencv_libs.append(\"superres\") or \"\" }}\n        {{ opencv_libs.append(\"surface_matching\") or \"\" }}\n        {{ opencv_libs.append(\"text\") or \"\" }}\n        {{ opencv_libs.append(\"tracking\") or \"\" }}\n        {{ opencv_libs.append(\"video\") or \"\" }}\n        {{ opencv_libs.append(\"videoio\") or \"\" }}\n        {{ opencv_libs.append(\"videostab\") or \"\" }}\n        {{ opencv_libs.append(\"wechat_qrcode\") or \"\" }}\n        {{ opencv_libs.append(\"xfeatures2d\") or \"\" }}\n        {{ opencv_libs.append(\"ximgproc\") or \"\" }}\n        {{ opencv_libs.append(\"xobjdetect\") or \"\" }}\n        {{ opencv_libs.append(\"xphoto\") or \"\" }}\n        - export MACOSX_DEPLOYMENT_TARGET={{ MACOSX_DEPLOYMENT_TARGET }}       # [osx]\n        - export CONDA_BUILD_SYSROOT={{ CONDA_BUILD_SYSROOT }}                 # [osx]\n        - OPENCV_FLAGS=`pkg-config --cflags opencv4`  # [unix]\n        - $CXX -std=c++11 $RECIPE_DIR/test.cpp ${OPENCV_FLAGS} -o test   # [unix]\n        - if [[ $(./test) != $PKG_VERSION ]]; then exit 1 ; fi                # [unix]\n        {% for each_opencv_lib in opencv_libs %}\n        - test -f $PREFIX/lib/libopencv_{{ each_opencv_lib }}${SHLIB_EXT}                  # [unix]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_{{ each_opencv_lib }}{{ win_ver_lib }}.dll exit 1  # [win]\n        {% endfor %}\n        - test -f $PREFIX/lib/libopencv_bioinspired${SHLIB_EXT}  # [unix]\n        - test -f $PREFIX/lib/libopencv_hdf${SHLIB_EXT}          # [unix]\n        - test -f $PREFIX/lib/libopencv_freetype${SHLIB_EXT}     # [unix]\n        - mkdir -p cmake_build_test && pushd cmake_build_test\n        - cmake -G \"Ninja\" ..\n        - cmake --build . --config Release\n        - popd\n\noutputs:\n  - name: libopencv\n  - name: opencv\n    build:\n      string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n    requirements:\n      host:\n        # Explicitely add a python requirement so that the hash changes between\n        # opencv    for pypy36 and python3.6\n        # similarly for pypy37 and python3.7\n        - python\n      run:\n        - {{ pin_subpackage('libopencv', exact=True) }}\n        - {{ pin_subpackage('py-opencv', exact=True) }}\n\n  - name: py-opencv\n    build:\n      string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n      run_exports:\n        # Should we even have this???\n        # don't pin the python version so hard.\n        # Actually, I have found pretty good compatibility in the python\n        # package\n        - {{ pin_subpackage('py-opencv') }}\n    requirements:\n      # There is no build script, but I just want it to think\n      # that it needs python and numpy at build time\n      host:\n        - python\n        - numpy\n      run:\n        - python\n        - {{ pin_compatible('numpy') }}\n        - {{ pin_subpackage('libopencv', exact=True) }}\n    test:\n      requires:\n        # Test with the two currently supported lapack implementatons\n        # One test done on different versions of python on each platform\n        - liblapack * *openblas         # [py==39]\n        - liblapack * *mkl              # [py==310 and linux64]\n      imports:\n        - cv2\n        - cv2.xfeatures2d\n        - cv2.freetype\n      files:\n        - run_py_test.py\n        - color_palette_alpha.png\n        - test_1_c1.jpg\n      source_files:\n        - test.avi\n      commands:\n        - python run_py_test.py\n        - if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi  # [unix]\n        - python -c \"import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)\"  # [linux]\n        - python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"\n        - pip list\n        - test $(pip list | grep opencv-python | wc -l) -eq 1  # [unix]\n      requires:\n        - pip\n\n\nabout:\n  home: http://opencv.org/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: Computer vision and machine learning software library.\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - msarahan\n    - patricksnape\n    - zym1010\n    - hajapy\n    - ocefpaf\n    - hmaarrfk\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "ffmpeg",
   "freetype",
   "glib",
   "harfbuzz",
   "hdf5",
   "jasper",
   "jpeg",
   "libcblas",
   "libgomp",
   "liblapack",
   "liblapacke",
   "libopencv",
   "libpng",
   "libprotobuf",
   "libtiff",
   "libwebp",
   "ninja",
   "numpy",
   "pkg-config",
   "py-opencv",
   "python",
   "qt-main",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "eigen",
    "ffmpeg",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt-main",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip",
    "pkg-config"
   ]
  }
 },
 "smithy_version": "3.22.1",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg 5=lgpl_*",
    "freetype",
    "glib",
    "harfbuzz",
    "hdf5",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt-main",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "harfbuzz",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip",
    "pkg-config"
   ]
  }
 },
 "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz",
 "version": "4.6.0",
 "win_64_meta_yaml": {
  "about": {
   "home": "http://opencv.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Computer vision and machine learning software library."
  },
  "build": {
   "ignore_run_exports_from": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ],
   "number": "7",
   "run_exports": [
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv",
    "libopencv"
   ],
   "string": "py39h1234567_7"
  },
  "extra": {
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk",
    "jakirkham",
    "msarahan",
    "patricksnape",
    "zym1010",
    "hajapy",
    "ocefpaf",
    "hmaarrfk"
   ]
  },
  "outputs": [
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py310h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py310h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py38h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py38h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py311h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py311h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   },
   {
    "name": "libopencv"
   },
   {
    "build": {
     "string": "py39h1234567_7"
    },
    "name": "opencv",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "libopencv",
      "py-opencv"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "py-opencv"
     ],
     "string": "py39h1234567_7"
    },
    "name": "py-opencv",
    "requirements": {
     "host": [
      "python",
      "numpy"
     ],
     "run": [
      "python",
      "numpy",
      "libopencv"
     ]
    },
    "test": {
     "commands": [
      "python run_py_test.py",
      "python -c \"import cv2, re; assert re.search('Lapack:\\s+YES', cv2.getBuildInformation())\"",
      "pip list"
     ],
     "files": [
      "run_py_test.py",
      "color_palette_alpha.png",
      "test_1_c1.jpg"
     ],
     "imports": [
      "cv2",
      "cv2.xfeatures2d",
      "cv2.freetype"
     ],
     "requires": [
      "pip"
     ],
     "source_files": [
      "test.avi"
     ]
    }
   }
  ],
  "package": {
   "name": "libopencv",
   "version": "4.6.0"
  },
  "requirements": {
   "build": [
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf",
    "python",
    "numpy",
    "eigen",
    "jasper",
    "zlib",
    "jpeg",
    "libtiff",
    "libwebp",
    "harfbuzz",
    "libpng",
    "ffmpeg 5=lgpl_*",
    "qt-main",
    "liblapacke",
    "liblapack",
    "libcblas",
    "freetype",
    "libprotobuf"
   ],
   "run": [
    "freetype",
    "freetype",
    "freetype",
    "freetype",
    "freetype",
    "freetype"
   ]
  },
  "source": [
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   },
   {
    "fn": "opencv-4.6.0.tar.gz",
    "patches": [
     "install_pip_metadata.patch",
     "delete_lines_that_download_opencv.patch",
     "find_pkgconfig_windows.patch",
     "22357-add-missing-header-for-libavcodec-version.patch"
    ],
    "sha256": "1ec1cba65f9f20fe5a41fda1586e01c70ea0c9a6d7b67c9e13edf0cfe2239277",
    "url": "https://github.com/opencv/opencv/archive/4.6.0.tar.gz"
   },
   {
    "fn": "opencv_contrib-4.6.0.tar.gz",
    "folder": "opencv_contrib",
    "patches": [
     "cmake_hdf5_xpile.patch"
    ],
    "sha256": "1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7",
    "url": "https://github.com/opencv/opencv_contrib/archive/4.6.0.tar.gz"
   },
   {
    "fn": "test.avi",
    "sha256": "78884f64b564a3b06dc6ee731ed33b60c6d8cd864cea07f21d94ba0f90c7b310",
    "url": "https://github.com/opencv/opencv_extra/raw/master/testdata/highgui/video/VID00003-20100701-2204.avi"
   }
  ],
  "test": {
   "commands": [
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_alphamat460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_aruco460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_bgsegm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_calib3d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ccalib460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_core460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_datasets460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dnn460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_dpm460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_face460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_features2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_flann460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_fuzzy460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_gapi460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_hfs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_highgui460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_img_hash460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgcodecs460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_imgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_intensity_transform460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_line_descriptor460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_mcc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ml460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_objdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_optflow460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_phase_unwrapping460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_photo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_plot460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_quality460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rapid460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_reg460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_rgbd460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_saliency460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_shape460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stereo460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_stitching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_structured_light460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_superres460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_surface_matching460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_text460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_tracking460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_video460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videoio460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_videostab460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_wechat_qrcode460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xfeatures2d460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_ximgproc460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xobjdetect460.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\opencv_xphoto460.dll exit 1",
    "mkdir -p cmake_build_test && pushd cmake_build_test",
    "cmake -G \"Ninja\" ..",
    "cmake --build . --config Release",
    "popd"
   ],
   "files": [
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp",
    "CMakeLists.txt",
    "test.cpp"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "ffmpeg",
    "freetype",
    "harfbuzz",
    "jasper",
    "jpeg",
    "libcblas",
    "liblapack",
    "liblapacke",
    "libpng",
    "libprotobuf",
    "libtiff",
    "libwebp",
    "numpy",
    "python",
    "qt-main",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "freetype",
    "libopencv",
    "numpy",
    "py-opencv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pip"
   ]
  }
 }
}