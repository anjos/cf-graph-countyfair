{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/825117974.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/868719990.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/893285310.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/919631946.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/927174933.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/943527311.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.7"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/956831199.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/982600629.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1001394169.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "mobie_utils",
 "hash_type": "sha256",
 "name": "mobie_utils",
 "new_version": "0.3.2",
 "new_version_attempts": {
  "0.2.2": 1,
  "0.2.3": 1,
  "0.2.4": 1,
  "0.2.5": 1,
  "0.2.6": 1,
  "0.2.7": 1,
  "0.3.0": 1,
  "0.3.1": 1,
  "0.3.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mobie_utils"
  ]
 },
 "pinning_version": "2022.07.19.11.33.02",
 "raw_meta_yaml": "{% set version = \"0.3.2\" %}\n{% set name = \"mobie_utils\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mobie/mobie-utils-python/archive/{{ version }}.tar.gz\n  sha256: 41939160a9c20812fb773a0918febb51d3508d7408a8a5986ee7d8e108d1c1ed\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  noarch: python\n  entry_points:\n    - mobie.add_image = mobie.image_data:main\n    - mobie.add_registered_source = mobie.registration:main\n    - mobie.add_segmentation = mobie.segmentation:main\n    - mobie.add_traces = mobie.traces:main\n    - mobie.add_open_organelle_dataset = mobie.open_organelle:main\n    - mobie.migrate_dataset = mobie.migration.migrate_dataset:main\n    - mobie.migrate_project = mobie.migration.migrate_project:main\n    - mobie.validate_dataset = mobie.validation.dataset:main\n    - mobie.validate_project = mobie.validation.project:main\n    - mobie.add_remote_metadata = mobie.metadata.remote_metadata:main\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - cluster_tools >=0.4.4\n    - jsonschema\n    - pandas\n    - requests\n    - s3fs\n\ntest:\n  imports:\n    - mobie\n    - mobie.metadata\n  commands:\n    - mobie.add_image -h\n    - mobie.add_registered_source -h\n    - mobie.add_segmentation -h\n    - mobie.add_traces -h\n    - mobie.add_open_organelle_dataset -h\n    - mobie.migrate_dataset -h\n    - mobie.migrate_project -h\n    - mobie.validate_dataset -h\n    - mobie.validate_project -h\n  # the unit-tests fail on conda forge, I think because most of the jobs are submitted via luigi,\n  # which causes trouble. But the tests pass for all OS iin the CI:\n  # https://github.com/mobie/mobie-utils-python/blob/master/.github/workflows/build_and_test.yaml\n  # source_files:\n  #   - test/**/*.py\n  # commands:\n  #   - python -m unittest discover -s test -v\n\nabout:\n  license: MIT\n  license_file: LICENSE\n  license_family: MIT\n  summary: Python tools for MoBIE.\n  home: https://github.com/mobie/mobie-utils-python\n\nextra:\n  recipe-maintainers:\n    - constantinpape\n",
 "smithy_version": "3.21.0",
 "strong_exports": false,
 "url": "https://github.com/mobie/mobie-utils-python/archive/0.3.2.tar.gz",
 "version": "0.3.2"
}