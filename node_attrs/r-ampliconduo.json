{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/414970090.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "r400"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/422951057.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/654466032.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "r410"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "r-ampliconduo",
 "hash_type": "sha256",
 "name": "r-ampliconduo",
 "new_version": "1.1.1",
 "new_version_attempts": {
  "1.1.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-ampliconduo"
  ]
 },
 "pinning_version": "2021.05.25.06.47.12",
 "raw_meta_yaml": "{% set version = \"1.1.1\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-ampliconduo\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/AmpliconDuo_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/AmpliconDuo/AmpliconDuo_{{ version }}.tar.gz\n  sha256: 7a42628b9c3a117a45ced622dc92761d66dd962276dee7d4c70db07d4837806f\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-ggplot2\n    - r-xtable\n  run:\n    - r-base\n    - r-ggplot2\n    - r-xtable\n\ntest:\n  commands:\n    - $R -e \"library('AmpliconDuo')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('AmpliconDuo')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=AmpliconDuo\n  license: GPL (>= 3)\n  summary: Increasingly powerful techniques for high-throughput sequencing open the possibility to comprehensively characterize microbial communities, including rare species. However, a still unresolved issue are the substantial error rates in the experimental process generating these sequences. To overcome these limitations\n    we propose an approach, where each sample is split and the same amplification and sequencing protocol is applied to both halves. This procedure should allow to detect likely PCR and sequencing artifacts, and true rare species by comparison of the results of both parts. The AmpliconDuo package, whereas amplicon duo from\n    here on refers to the two amplicon data sets of a split sample, is intended to help interpret the obtained read frequency distribution across split samples, and to filter the false positive reads.\n  license_family: GPL3\n  license_file: {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: AmpliconDuo\n# Type: Package\n# Title: Statistical Analysis of Amplicon Data of the Same Sample to Identify Artefacts\n# Authors@R: c(person(given = \"Anja\", family = \"Lange\", role = c(\"aut\", \"cre\"), email = \"anja.lange@uni-due.de\"), person(given = \"Daniel\", family = \"Hoffmann\", role = \"aut\", email = \"daniel.hoffmann@uni-due.de\"))\n# Version: 1.1\n# Date: 2016-01-14\n# Author: Anja Lange [aut, cre], Daniel Hoffmann [aut]\n# Maintainer: Anja Lange <anja.lange@uni-due.de>\n# Depends: R (>= 2.10), stats, ggplot2, xtable\n# Description: Increasingly powerful techniques for high-throughput sequencing open the possibility to comprehensively characterize microbial communities, including rare species. However, a still unresolved issue are the substantial error rates in the experimental process generating these sequences. To overcome these limitations we propose an approach, where each sample is split and the same amplification and sequencing protocol is applied to both halves. This procedure should allow to detect likely PCR and sequencing artifacts, and true rare species by comparison of the results of both parts. The AmpliconDuo package, whereas amplicon duo from here on refers to the two amplicon data sets of a split sample, is intended to help interpret the obtained read frequency distribution across split samples, and to filter the false positive reads.\n# License: GPL (>= 3)\n# NeedsCompilation: no\n# Packaged: 2016-01-19 09:46:32 UTC; anja\n# Repository: CRAN\n# Date/Publication: 2016-01-19 13:09:23\n",
 "smithy_version": "3.10.1",
 "strong_exports": false,
 "url": [
  "https://cran.r-project.org/src/contrib/AmpliconDuo_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/AmpliconDuo/AmpliconDuo_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/AmpliconDuo_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/AmpliconDuo/AmpliconDuo_1.1.1.tar.gz"
 ],
 "version": "1.1.1"
}