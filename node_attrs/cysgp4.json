{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/347622216.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/360064823.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/393328733.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/394313966.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/417277939.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.3.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502128041.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/555369291.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/683117858.json"
   },
   "data": {
    "bot_rerun": 1636396431.586294,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy37-windows"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/775668011.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/911328520.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "cysgp4",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The cysgp4 package is a Cython-powered wrapper of the sgp4 C++ library\nby Daniel Warner to compute satellite positions from two-line elements\n(TLE). It provides similar functionality as the well-known sgp4 Python\npackage by Brandon Rhodes, which uses Numba internally to speed-up the\ncalculations. In contrast to sgp4, cysgp4 can work well with arrays of\nTLEs and/or times and make use of multi-core platforms (via OpenMP) to\nboost processing times a lot.\n",
   "dev_url": "https://github.com/bwinkel/cysgp4",
   "home": "https://github.com/bwinkel/cysgp4",
   "license": "GPL-3.0 AND Apache-2.0 AND BSD-3-Clause",
   "license_file": [
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst"
   ],
   "summary": "Cysgp4 is a wrapper around the SGP4 package, for sat TLE calculations"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel"
   ]
  },
  "package": {
   "name": "cysgp4",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy"
   ]
  },
  "source": {
   "sha256": "76c83ee090cd097248c18bbbebe6891288e9b8e6185292ab8e7893f3492aac66",
   "url": "https://pypi.io/packages/source/c/cysgp4/cysgp4-0.3.3.tar.gz"
  },
  "test": {
   "commands": "python -c \"import cysgp4; cysgp4.test()\"",
   "imports": [
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The cysgp4 package is a Cython-powered wrapper of the sgp4 C++ library\nby Daniel Warner to compute satellite positions from two-line elements\n(TLE). It provides similar functionality as the well-known sgp4 Python\npackage by Brandon Rhodes, which uses Numba internally to speed-up the\ncalculations. In contrast to sgp4, cysgp4 can work well with arrays of\nTLEs and/or times and make use of multi-core platforms (via OpenMP) to\nboost processing times a lot.\n",
   "dev_url": "https://github.com/bwinkel/cysgp4",
   "home": "https://github.com/bwinkel/cysgp4",
   "license": "GPL-3.0 AND Apache-2.0 AND BSD-3-Clause",
   "license_file": [
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst"
   ],
   "summary": "Cysgp4 is a wrapper around the SGP4 package, for sat TLE calculations"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel"
   ]
  },
  "package": {
   "name": "cysgp4",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy"
   ]
  },
  "source": {
   "sha256": "76c83ee090cd097248c18bbbebe6891288e9b8e6185292ab8e7893f3492aac66",
   "url": "https://pypi.io/packages/source/c/cysgp4/cysgp4-0.3.3.tar.gz"
  },
  "test": {
   "commands": "python -c \"import cysgp4; cysgp4.test()\"",
   "imports": [
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4"
   ]
  }
 },
 "name": "cysgp4",
 "new_version": "0.3.3",
 "new_version_attempts": {
  "0.3.3": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "The cysgp4 package is a Cython-powered wrapper of the sgp4 C++ library\nby Daniel Warner to compute satellite positions from two-line elements\n(TLE). It provides similar functionality as the well-known sgp4 Python\npackage by Brandon Rhodes, which uses Numba internally to speed-up the\ncalculations. In contrast to sgp4, cysgp4 can work well with arrays of\nTLEs and/or times and make use of multi-core platforms (via OpenMP) to\nboost processing times a lot.\n",
   "dev_url": "https://github.com/bwinkel/cysgp4",
   "home": "https://github.com/bwinkel/cysgp4",
   "license": "GPL-3.0 AND Apache-2.0 AND BSD-3-Clause",
   "license_file": [
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst"
   ],
   "summary": "Cysgp4 is a wrapper around the SGP4 package, for sat TLE calculations"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel"
   ]
  },
  "package": {
   "name": "cysgp4",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "openmp 4.0.*",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy",
    "python",
    "setuptools",
    "openmp 4.0.*",
    "numpy"
   ]
  },
  "source": {
   "sha256": "76c83ee090cd097248c18bbbebe6891288e9b8e6185292ab8e7893f3492aac66",
   "url": "https://pypi.io/packages/source/c/cysgp4/cysgp4-0.3.3.tar.gz"
  },
  "test": {
   "commands": "python -c \"import cysgp4; cysgp4.test()\"",
   "imports": [
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "openmp",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cysgp4"
  ]
 },
 "pinning_version": "2022.04.16.05.14.45",
 "raw_meta_yaml": "{% set name = \"cysgp4\" %}\n{% set version = \"0.3.3\" %}\n{% set sha256 = \"76c83ee090cd097248c18bbbebe6891288e9b8e6185292ab8e7893f3492aac66\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 3\n  skip: true  # [py27]\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\n  host:\n    - openmp 4.0.*  # [osx]\n    - python\n    - pip\n    - setuptools\n    - setuptools_scm\n    - cython\n    - numpy\n\n  run:\n    - python\n    - setuptools\n    - openmp 4.0.*  # [osx]\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - cysgp4\n\n  commands: python -c \"import cysgp4; cysgp4.test()\"\n\nabout:\n  home: https://github.com/bwinkel/{{ name }}\n  license: GPL-3.0 AND Apache-2.0 AND BSD-3-Clause\n  license_file:\n    - COPYING.GPLv3.txt\n    - COPYING.Apache2\n    - TEMPLATE_LICENCE.rst\n  summary: Cysgp4 is a wrapper around the SGP4 package, for sat TLE calculations\n  description: |\n    The cysgp4 package is a Cython-powered wrapper of the sgp4 C++ library\n    by Daniel Warner to compute satellite positions from two-line elements\n    (TLE). It provides similar functionality as the well-known sgp4 Python\n    package by Brandon Rhodes, which uses Numba internally to speed-up the\n    calculations. In contrast to sgp4, cysgp4 can work well with arrays of\n    TLEs and/or times and make use of multi-core platforms (via OpenMP) to\n    boost processing times a lot.\n  dev_url: https://github.com/bwinkel/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - bwinkel\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "cython",
   "numpy",
   "openmp",
   "pip",
   "python",
   "setuptools",
   "setuptools_scm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "openmp",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.19.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "openmp 4.0.*",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "openmp 4.0.*",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/c/cysgp4/cysgp4-0.3.3.tar.gz",
 "version": "0.3.3",
 "win_64_meta_yaml": {
  "about": {
   "description": "The cysgp4 package is a Cython-powered wrapper of the sgp4 C++ library\nby Daniel Warner to compute satellite positions from two-line elements\n(TLE). It provides similar functionality as the well-known sgp4 Python\npackage by Brandon Rhodes, which uses Numba internally to speed-up the\ncalculations. In contrast to sgp4, cysgp4 can work well with arrays of\nTLEs and/or times and make use of multi-core platforms (via OpenMP) to\nboost processing times a lot.\n",
   "dev_url": "https://github.com/bwinkel/cysgp4",
   "home": "https://github.com/bwinkel/cysgp4",
   "license": "GPL-3.0 AND Apache-2.0 AND BSD-3-Clause",
   "license_file": [
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst",
    "COPYING.GPLv3.txt",
    "COPYING.Apache2",
    "TEMPLATE_LICENCE.rst"
   ],
   "summary": "Cysgp4 is a wrapper around the SGP4 package, for sat TLE calculations"
  },
  "build": {
   "number": "3",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/python.exe -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel",
    "bwinkel"
   ]
  },
  "package": {
   "name": "cysgp4",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "cython",
    "numpy"
   ],
   "run": [
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy",
    "python",
    "setuptools",
    "numpy"
   ]
  },
  "source": {
   "sha256": "76c83ee090cd097248c18bbbebe6891288e9b8e6185292ab8e7893f3492aac66",
   "url": "https://pypi.io/packages/source/c/cysgp4/cysgp4-0.3.3.tar.gz"
  },
  "test": {
   "commands": "python -c \"import cysgp4; cysgp4.test()\"",
   "imports": [
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4",
    "cysgp4"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}