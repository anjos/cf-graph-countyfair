{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/897572170.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/919632423.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/932611335.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/934671450.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/957106396.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/966231234.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/994644582.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1050827018.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1099415521.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.4.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1126469244.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1135195646.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.5.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "optimum",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "\uD83E\uDD17 Optimum is an extension of \uD83E\uDD17 Transformers, providing a set of performance\noptimization tools enabling maximum efficiency to train and run models on\ntargeted hardware.\n\nThe AI ecosystem evolves quickly and more and more specialized hardware along\nwith their own optimizations are emerging every day. As such, Optimum enables\nusers to efficiently use any of these platforms with the same ease inherent\nto transformers.\n\nPyPI: [https://pypi.org/project/optimum/](https://pypi.org/project/optimum/)\n",
   "dev_url": "https://github.com/huggingface/optimum",
   "doc_url": "https://huggingface.co/docs/optimum/",
   "home": "https://huggingface.co/hardware",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Optimum Library is an extension of the Hugging Face Transformers\nlibrary, providing a framework to integrate third-party libraries\nfrom Hardware Partners and interface with their specific functionality.\n"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "optimum",
   "version": "1.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "python >=3.7",
    "coloredlogs",
    "sympy",
    "pytorch >=1.9",
    "transformers >=4.15.0",
    "huggingface_hub ==0.4.0",
    "packaging",
    "numpy",
    "requests",
    "tqdm",
    "pyyaml",
    "onnx",
    "onnxruntime",
    "datasets >=1.2.1",
    "dill >=0.3.5.1"
   ]
  },
  "source": {
   "sha256": "e68a7a075571cfadf3eaa02513cfdd315f750ce01e8ed5b8d3b4ce785b5c9c7d",
   "url": "https://pypi.io/packages/source/o/optimum/optimum-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "optimum"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "coloredlogs",
    "datasets",
    "dill",
    "huggingface_hub",
    "numpy",
    "onnx",
    "onnxruntime",
    "packaging",
    "python",
    "pytorch",
    "pyyaml",
    "requests",
    "sympy",
    "tqdm",
    "transformers"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "\uD83E\uDD17 Optimum is an extension of \uD83E\uDD17 Transformers, providing a set of performance\noptimization tools enabling maximum efficiency to train and run models on\ntargeted hardware.\n\nThe AI ecosystem evolves quickly and more and more specialized hardware along\nwith their own optimizations are emerging every day. As such, Optimum enables\nusers to efficiently use any of these platforms with the same ease inherent\nto transformers.\n\nPyPI: [https://pypi.org/project/optimum/](https://pypi.org/project/optimum/)\n",
   "dev_url": "https://github.com/huggingface/optimum",
   "doc_url": "https://huggingface.co/docs/optimum/",
   "home": "https://huggingface.co/hardware",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Optimum Library is an extension of the Hugging Face Transformers\nlibrary, providing a framework to integrate third-party libraries\nfrom Hardware Partners and interface with their specific functionality.\n"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "optimum",
   "version": "1.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "python >=3.7",
    "coloredlogs",
    "sympy",
    "pytorch >=1.9",
    "transformers >=4.15.0",
    "huggingface_hub ==0.4.0",
    "packaging",
    "numpy",
    "requests",
    "tqdm",
    "pyyaml",
    "onnx",
    "onnxruntime",
    "datasets >=1.2.1",
    "dill >=0.3.5.1"
   ]
  },
  "source": {
   "sha256": "e68a7a075571cfadf3eaa02513cfdd315f750ce01e8ed5b8d3b4ce785b5c9c7d",
   "url": "https://pypi.io/packages/source/o/optimum/optimum-1.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "optimum"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "optimum",
 "new_version": "1.5.2",
 "new_version_attempts": {
  "1.1.0": 1,
  "1.1.1": 1,
  "1.2.0": 1,
  "1.2.1": 1,
  "1.2.2": 2,
  "1.2.3": 1,
  "1.3.0": 1,
  "1.4.0": 0,
  "1.4.1": 1,
  "1.5.0": 1,
  "1.5.1": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "optimum"
  ]
 },
 "pinning_version": "2022.11.23.19.37.15",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"optimum\" %}\n{% set version = \"1.3.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/optimum-{{ version }}.tar.gz\n  sha256: e68a7a075571cfadf3eaa02513cfdd315f750ce01e8ed5b8d3b4ce785b5c9c7d\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - python >=3.7\n    - coloredlogs\n    - sympy\n    - pytorch >=1.9\n    - transformers >=4.15.0\n    - huggingface_hub ==0.4.0\n    - packaging\n    - numpy\n    - requests\n    - tqdm\n    - pyyaml\n    # Dependencies necessary for passing pip-check\n    - onnx\n    - onnxruntime\n    - datasets >=1.2.1\n    - dill >=0.3.5.1\n\ntest:\n  imports:\n    - optimum\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://huggingface.co/hardware\n  summary: |\n    Optimum Library is an extension of the Hugging Face Transformers \n    library, providing a framework to integrate third-party libraries \n    from Hardware Partners and interface with their specific functionality.\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    \uD83E\uDD17 Optimum is an extension of \uD83E\uDD17 Transformers, providing a set of performance \n    optimization tools enabling maximum efficiency to train and run models on \n    targeted hardware.\n\n    The AI ecosystem evolves quickly and more and more specialized hardware along \n    with their own optimizations are emerging every day. As such, Optimum enables \n    users to efficiently use any of these platforms with the same ease inherent \n    to transformers.\n\n    PyPI: [https://pypi.org/project/optimum/](https://pypi.org/project/optimum/)\n\n  doc_url: https://huggingface.co/docs/optimum/\n  dev_url: https://github.com/huggingface/optimum\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "req": {
  "__set__": true,
  "elements": [
   "coloredlogs",
   "datasets",
   "dill",
   "huggingface_hub",
   "numpy",
   "onnx",
   "onnxruntime",
   "packaging",
   "pip",
   "python",
   "pytorch",
   "pyyaml",
   "requests",
   "sympy",
   "tqdm",
   "transformers"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "coloredlogs",
    "datasets",
    "dill",
    "huggingface_hub",
    "numpy",
    "onnx",
    "onnxruntime",
    "packaging",
    "python",
    "pytorch",
    "pyyaml",
    "requests",
    "sympy",
    "tqdm",
    "transformers"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.22.0",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "coloredlogs",
    "datasets >=1.2.1",
    "dill >=0.3.5.1",
    "huggingface_hub ==0.4.0",
    "numpy",
    "onnx",
    "onnxruntime",
    "packaging",
    "python >=3.7",
    "pytorch >=1.9",
    "pyyaml",
    "requests",
    "sympy",
    "tqdm",
    "transformers >=4.15.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/o/optimum/optimum-1.3.0.tar.gz",
 "version": "1.3.0"
}