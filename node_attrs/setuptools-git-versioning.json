{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/1000267897.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1045537206.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.10.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/1074004508.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.11.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Received dictionary as spec.  Note that pip requirements are not supported in conda-build meta.yaml.  Error message: Invalid version '0.10.2;python_version<\"3.11\"': invalid character(s)",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 45, in __call__",
   "    return cls._cache_[arg]",
   "KeyError: '>=0.10.2;python_version<\"3.11\"'",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 45, in __call__",
   "    return cls._cache_[arg]",
   "KeyError: '0.10.2;python_version<\"3.11\"'",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1261, in ms_depends",
   "    ms = MatchSpec(spec)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 56, in __call__",
   "    return super(MatchSpecType, cls).__call__(**parsed)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 177, in __init__",
   "    self._match_components = self._build_components(**kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 403, in _build_components",
   "    return frozendict(_make_component(key, value) for key, value in kwargs.items())",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/_vendor/frozendict/__init__.py\", line 21, in __init__",
   "    self._dict = self.dict_cls(*args, **kwargs)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 403, in <genexpr>",
   "    return frozendict(_make_component(key, value) for key, value in kwargs.items())",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 417, in _make_component",
   "    matcher = _implementors[field_name](value)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 47, in __call__",
   "    val = cls._cache_[arg] = super(SingleStrArgCachingType, cls).__call__(arg)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 502, in __init__",
   "    vspec_str, matcher, is_exact = self.get_matcher(vspec)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 551, in get_matcher",
   "    self.matcher_vo = VersionOrder(vo_str)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 47, in __call__",
   "    val = cls._cache_[arg] = super(SingleStrArgCachingType, cls).__call__(arg)",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 178, in __init__",
   "    raise InvalidVersionSpec(vstr, \"invalid character(s)\")",
   "conda.exceptions.InvalidVersionSpec: Invalid version '0.10.2;python_version<\"3.11\"': invalid character(s)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator",
   "    migrator_uid, pr_json = run(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run",
   "    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations",
   "    mini_migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/dep_updates.py\", line 34, in migrate",
   "    dep_comparison, _ = get_dep_updates_and_hints(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 62, in get_dep_updates_and_hints",
   "    dep_comparison, gs_recipe = get_grayskull_comparison(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 204, in get_grayskull_comparison",
   "    new_attrs = load_feedstock(attrs.get(\"feedstock_name\"), {}, meta_yaml=gs_recipe)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 415, in load_feedstock",
   "    populate_feedstock_attributes(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes",
   "    parse_meta_yaml(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml",
   "    return _parse_meta_yaml_impl(",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 242, in _parse_meta_yaml_impl",
   "    cfg_as_dict.update(conda_build.environ.get_dict(m=m))",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/environ.py\", line 274, in get_dict",
   "    d.update(python_vars(m, prefix, escape_backslash))",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/environ.py\", line 345, in python_vars",
   "    deps = [str(ms.name) for ms in metadata.ms_depends(build_or_host)]",
   "  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1265, in ms_depends",
   "    raise RuntimeError(\"Received dictionary as spec.  Note that pip requirements are \"",
   "RuntimeError: Received dictionary as spec.  Note that pip requirements are not supported in conda-build meta.yaml.  Error message: Invalid version '0.10.2;python_version<\"3.11\"': invalid character(s)",
   ""
  ]
 },
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "inspection": "update-grayskull"
  }
 },
 "feedstock_name": "setuptools-git-versioning",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/dolfinus/setuptools-git-versioning",
   "home": "https://setuptools-git-versioning.readthedocs.io",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Use git repo data for building a version number according PEP-440"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "setuptools-git-versioning",
   "version": "1.11.0"
  },
  "requirements": {
   "host": [
    "deprecated",
    "packaging",
    "pip",
    "python >=3.7",
    "setuptools",
    "toml >=0.10.2"
   ],
   "run": [
    "deprecated",
    "packaging",
    "python >=3.7",
    "setuptools",
    "toml >=0.10.2"
   ]
  },
  "source": {
   "sha256": "c4c083cf7ab3fca54f73f096b7cb07aa7bdc479df0b4adaad8f1519c4a39b812",
   "url": "https://pypi.io/packages/source/s/setuptools-git-versioning/setuptools-git-versioning-1.11.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "setuptools_git_versioning"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "deprecated",
    "packaging",
    "pip",
    "python",
    "setuptools",
    "toml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "deprecated",
    "packaging",
    "python",
    "setuptools",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/dolfinus/setuptools-git-versioning",
   "home": "https://setuptools-git-versioning.readthedocs.io",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Use git repo data for building a version number according PEP-440"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/run_env/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "setuptools-git-versioning",
   "version": "1.11.0"
  },
  "requirements": {
   "host": [
    "deprecated",
    "packaging",
    "pip",
    "python >=3.7",
    "setuptools",
    "toml >=0.10.2"
   ],
   "run": [
    "deprecated",
    "packaging",
    "python >=3.7",
    "setuptools",
    "toml >=0.10.2"
   ]
  },
  "source": {
   "sha256": "c4c083cf7ab3fca54f73f096b7cb07aa7bdc479df0b4adaad8f1519c4a39b812",
   "url": "https://pypi.io/packages/source/s/setuptools-git-versioning/setuptools-git-versioning-1.11.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "setuptools_git_versioning"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "setuptools-git-versioning",
 "new_version": "1.13.1",
 "new_version_attempts": {
  "1.10.0": 1,
  "1.10.1": 1,
  "1.11.0": 0,
  "1.12.0": 12,
  "1.12.1": 6,
  "1.13.0": 4,
  "1.13.1": 3
 },
 "new_version_errors": {
  "1.12.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.12.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/setuptools-git-versioning-{{ version }}.tar.gz'\n",
  "1.12.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.12.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/setuptools-git-versioning-{{ version }}.tar.gz'\n",
  "1.13.0": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.13.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/setuptools-git-versioning-{{ version }}.tar.gz'\n"
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "setuptools-git-versioning"
  ]
 },
 "pinning_version": "2022.10.02.10.42.57",
 "pre_pr_migrator_attempts": {
  "version": 3
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/3458461811\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 45, in __call__\n    return cls._cache_[arg]\nKeyError: '>=0.10.2;python_version<\"3.11\"'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 45, in __call__\n    return cls._cache_[arg]\nKeyError: '0.10.2;python_version<\"3.11\"'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1261, in ms_depends\n    ms = MatchSpec(spec)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 56, in __call__\n    return super(MatchSpecType, cls).__call__(**parsed)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 177, in __init__\n    self._match_components = self._build_components(**kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 403, in _build_components\n    return frozendict(_make_component(key, value) for key, value in kwargs.items())\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/_vendor/frozendict/__init__.py\", line 21, in __init__\n    self._dict = self.dict_cls(*args, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 403, in <genexpr>\n    return frozendict(_make_component(key, value) for key, value in kwargs.items())\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/match_spec.py\", line 417, in _make_component\n    matcher = _implementors[field_name](value)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 47, in __call__\n    val = cls._cache_[arg] = super(SingleStrArgCachingType, cls).__call__(arg)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 502, in __init__\n    vspec_str, matcher, is_exact = self.get_matcher(vspec)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 551, in get_matcher\n    self.matcher_vo = VersionOrder(vo_str)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 47, in __call__\n    val = cls._cache_[arg] = super(SingleStrArgCachingType, cls).__call__(arg)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda/models/version.py\", line 178, in __init__\n    raise InvalidVersionSpec(vstr, \"invalid character(s)\")\nconda.exceptions.InvalidVersionSpec: Invalid version '0.10.2;python_version<\"3.11\"': invalid character(s)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run\n    migrator.run_post_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/core.py\", line 283, in run_post_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/dep_updates.py\", line 34, in migrate\n    dep_comparison, _ = get_dep_updates_and_hints(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 62, in get_dep_updates_and_hints\n    dep_comparison, gs_recipe = get_grayskull_comparison(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/update_deps.py\", line 204, in get_grayskull_comparison\n    new_attrs = load_feedstock(attrs.get(\"feedstock_name\"), {}, meta_yaml=gs_recipe)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 415, in load_feedstock\n    populate_feedstock_attributes(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 242, in _parse_meta_yaml_impl\n    cfg_as_dict.update(conda_build.environ.get_dict(m=m))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/environ.py\", line 274, in get_dict\n    d.update(python_vars(m, prefix, escape_backslash))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/environ.py\", line 345, in python_vars\n    deps = [str(ms.name) for ms in metadata.ms_depends(build_or_host)]\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1265, in ms_depends\n    raise RuntimeError(\"Received dictionary as spec.  Note that pip requirements are \"\nRuntimeError: Received dictionary as spec.  Note that pip requirements are not supported in conda-build meta.yaml.  Error message: Invalid version '0.10.2;python_version<\"3.11\"': invalid character(s)\n"
 },
 "raw_meta_yaml": "{% set name = \"setuptools-git-versioning\" %}\n{% set version = \"1.11.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/setuptools-git-versioning-{{ version }}.tar.gz\n  sha256: c4c083cf7ab3fca54f73f096b7cb07aa7bdc479df0b4adaad8f1519c4a39b812\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - deprecated\n    - packaging\n    - pip\n    - python >=3.7\n    - setuptools\n    - toml >=0.10.2\n  run:\n    - deprecated\n    - packaging\n    - python >=3.7\n    - setuptools\n    - toml >=0.10.2\n\ntest:\n  imports:\n    - setuptools_git_versioning\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://setuptools-git-versioning.readthedocs.io\n  summary: Use git repo data for building a version number according PEP-440\n  dev_url: https://github.com/dolfinus/setuptools-git-versioning\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - BastianZim\n",
 "req": {
  "__set__": true,
  "elements": [
   "deprecated",
   "packaging",
   "pip",
   "python",
   "setuptools",
   "toml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "deprecated",
    "packaging",
    "pip",
    "python",
    "setuptools",
    "toml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "deprecated",
    "packaging",
    "python",
    "setuptools",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "smithy_version": "3.21.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "deprecated",
    "packaging",
    "pip",
    "python >=3.7",
    "setuptools",
    "toml >=0.10.2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "deprecated",
    "packaging",
    "python >=3.7",
    "setuptools",
    "toml >=0.10.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/setuptools-git-versioning/setuptools-git-versioning-1.11.0.tar.gz",
 "version": "1.11.0"
}