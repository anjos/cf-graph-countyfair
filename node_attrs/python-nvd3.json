{
 "PRed": [
  {
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.15.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/200173855.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "python-nvd3",
 "hash_type": "sha256",
 "name": "python-nvd3",
 "new_version": "0.15.0",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "python-nvd3"
  ]
 },
 "pinning_version": "2018.07.01",
 "raw_meta_yaml": "{% set name = \"python-nvd3\" %}\n{% set version = \"0.15.0\" %}\n{% set sha256 = \"fbd75ff47e0ef255b4aa4f3a8b10dc8b4024aa5a9a7abed5b2406bd3cb817715\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 2\n  script: python -m pip install --no-deps --ignore-installed .\n\n  entry_points:\n    - nvd3 = nvd3.NVD3Chart:_main\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n\n  run:\n    - python\n    - python-slugify >=1.2.5\n    - jinja2 >=2.8\n\ntest:\n  imports:\n    - nvd3\n  commands:\n    - nvd3 --help\n\nabout:\n  home: http://github.com/areski/python-nvd3\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Python NVD3 - Chart Library for d3.js'\n\n  description: |\n      NVD3 is an attempt to build re-usable charts and chart components\n      for d3.js without taking away the power that d3.js offers you.\n      Python-NVD3 makes your life easy! You write Python and the library\n      renders JavaScript for you!\n  doc_url: http://python-nvd3.readthedocs.io/en/latest\n  dev_url: https://github.com/simplejson/simplejson\n\nextra:\n  recipe-maintainers:\n    - sodre\n    - xylar\n",
 "smithy_version": "3.1.6",
 "strong_exports": false,
 "url": "https://pypi.io/packages/source/p/python-nvd3/python-nvd3-0.15.0.tar.gz",
 "version": "0.15.0"
}