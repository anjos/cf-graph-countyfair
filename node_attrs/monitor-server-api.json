{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/759711747.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/764692245.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.0.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/825026397.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python310"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": "make_graph: render error No module named 'toml'\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 241, in populate_feedstock_attributes\n    parse_meta_yaml(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 167, in parse_meta_yaml\n    return _parse_meta_yaml_impl(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 239, in _parse_meta_yaml_impl\n    m = MetaData(tmpdir, config=config, variant=var)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 932, in __init__\n    self.parse_again(permit_undefined_jinja=True, allow_no_other_outputs=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1007, in parse_again\n    self.meta = parse(self._get_contents(permit_undefined_jinja,\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/metadata.py\", line 1546, in _get_contents\n    from conda_build.jinja_context import context_processor, UndefinedNeverFail, FilteredLoader\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/conda_build/jinja_context.py\", line 13, in <module>\n    import toml\nModuleNotFoundError: No module named 'toml'\n",
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "monitor-server-api",
 "hash_type": "sha256",
 "name": "monitor-server-api",
 "new_version": "1.0.2",
 "new_version_attempts": {
  "1.0.1": 1,
  "1.0.2": 1
 },
 "new_version_errors": {},
 "outputs_names": {
  "__set__": true,
  "elements": [
   "monitor-server-api"
  ]
 },
 "pinning_version": "2022.01.17.16.16.21",
 "pre_pr_migrator_attempts": {},
 "pre_pr_migrator_status": {},
 "raw_meta_yaml": "{% set name = \"monitor-server-api\" %}\n{% set version = \"1.0.2\" %}\n{% set sha256 = \"986320ed4b7b20feb64c4fa81e2240d72c4a057dd2c7d9016e7d7a2d68e300f8\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  skip: true  # [win]\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - flask <2.0.0\n    - flask-restx\n    - flask-sqlalchemy\n    - sqlalchemy\n    - pandas\n    - requests\n    - pyyaml\n    - uwsgi\n    - werkzeug <2.0.0\n\ntest:\n  imports:\n    - monitor_api\n  requires:\n    - pip\n  commands:\n    - pip check\n    - type launch-monitor-server.sh  # [not win]\n\nabout:\n  home: https://github.com/CFMTech/{{ name }}\n  license: MIT\n  license_file: LICENSE\n  summary: A REST API that can be used a central point for collecting metrics from pytest-monitor.\n  description: |\n    For short, monitor-server-api helps you to collect, historicize and exploit the data from your tests\n    written with pytest and monitored with pytest-monitor\n     * Centralize your tests results\n     * bring support for *pytest-xdist* and *pytest-parallel*\n     * Easy data querying through specific queries\n     * Integrated library for in-script queries\n\n  doc_url: https://{{ name }}.readthedocs.io/\n  dev_url: https://github.com/CFMTech/{{ name }}\n\nextra:\n  recipe-maintainers:\n    - js-dieu\n",
 "smithy_version": "3.16.1",
 "strong_exports": false,
 "url": "https://pypi.org/packages/source/m/monitor-server-api/monitor-server-api-1.0.2.tar.gz",
 "version": "1.0.2"
}