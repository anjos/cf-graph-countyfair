{
 "builtin": {},
 "questionable": {
  "_pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest._argcomplete": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest._code.code": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest._io.saferepr": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  },
  "_pytest.assertion": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.cacheprovider": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.capture": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.config": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.config.argparsing": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.debugging": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.fixtures": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.helpconfig": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.main": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.mark": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.nodes": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.outcomes": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.pytester_assertions": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  },
  "_pytest.python": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.reports": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.runner": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.terminal": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.warning_types": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.warnings": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "argcomplete.completers": {
   "__set__": true,
   "elements": [
    "argcomplete"
   ]
  },
  "atomicwrites": {
   "__set__": true,
   "elements": [
    "atomicwrites",
    "pyamg"
   ]
  },
  "colorama": {
   "__set__": true,
   "elements": [
    "colorama",
    "pyamg"
   ]
  },
  "github3": {
   "__set__": true,
   "elements": [
    "github3.py"
   ]
  },
  "importlib_metadata": {
   "__set__": true,
   "elements": [
    "importlib-metadata",
    "importlib_metadata"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "packaging.requirements": {
   "__set__": true,
   "elements": [
    "packaging"
   ]
  },
  "packaging.version": {
   "__set__": true,
   "elements": [
    "packaging"
   ]
  },
  "pexpect": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pexpect"
   ]
  },
  "pkg_resources": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "py": {
   "__set__": true,
   "elements": [
    "py",
    "pyamg"
   ]
  },
  "pygments": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pygments.formatters.terminal": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pygments.lexers.python": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "toml": {
   "__set__": true,
   "elements": [
    "toml"
   ]
  },
  "twisted.trial.itrial": {
   "__set__": true,
   "elements": [
    "twisted"
   ]
  },
  "typing_extensions": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-storage-core",
    "typing_extensions"
   ]
  },
  "zope.interface": {
   "__set__": true,
   "elements": [
    "zope.interface"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "_pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest._code": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest._code.code": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest._code.source": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest._io": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  },
  "_pytest._io.saferepr": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  },
  "_pytest._io.wcwidth": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  },
  "_pytest._version": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.assertion": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.assertion.rewrite": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.assertion.util": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.cacheprovider": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.capture": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.compat": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.config": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.config.argparsing": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.config.exceptions": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.debugging": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.deprecated": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.fixtures": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.freeze_support": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.hookspec": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.logging": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.main": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.mark": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.mark.structures": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.monkeypatch": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.nodes": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.outcomes": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.pathlib": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.pytester": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.python": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.python_api": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.recwarn": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.reports": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.runner": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.skipping": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.store": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  },
  "_pytest.terminal": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.tmpdir": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "_pytest.warning_types": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "attr": {
   "__set__": true,
   "elements": [
    "attrs",
    "black",
    "pyamg"
   ]
  },
  "colorama": {
   "__set__": true,
   "elements": [
    "colorama",
    "pyamg"
   ]
  },
  "github3": {
   "__set__": true,
   "elements": [
    "github3.py"
   ]
  },
  "github3.repos": {
   "__set__": true,
   "elements": [
    "github3.py"
   ]
  },
  "iniconfig": {
   "__set__": true,
   "elements": [
    "iniconfig"
   ]
  },
  "pluggy": {
   "__set__": true,
   "elements": [
    "pluggy",
    "pyamg"
   ]
  },
  "py": {
   "__set__": true,
   "elements": [
    "py",
    "pyamg"
   ]
  },
  "pypandoc": {
   "__set__": true,
   "elements": [
    "pypandoc"
   ]
  },
  "pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "requests": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  }
 },
 "required no match": {}
}