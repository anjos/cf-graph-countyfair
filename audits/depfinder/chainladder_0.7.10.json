{
 "builtin": {},
 "questionable": {
  "IPython.core.display": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "ipython"
   ]
  },
  "chainladder": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils.utility_functions": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.workflow": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "cupy": {
   "__set__": true,
   "elements": [
    "cupy"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "chainladder": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.base": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.common": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.correlation": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.display": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.dunders": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.io": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.pandas": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.slice": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.core.triangle": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.development": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.development.base": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.development.clark": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.development.constant": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.development.incremental": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.development.munich": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods.base": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods.benktander": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods.bornferg": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods.capecod": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods.chainladder": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.methods.mack": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.tails": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.tails.base": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.tails.bondy": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.tails.clark": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.tails.constant": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.tails.curve": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils.cupy": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils.exhibits": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils.sparse": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils.utility_functions": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.utils.weighted_regression": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.workflow": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.workflow.berqsherm": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.workflow.bootstrap": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.workflow.gridsearch": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.workflow.parallelogram": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "chainladder.workflow.trend": {
   "__set__": true,
   "elements": [
    "chainladder"
   ]
  },
  "joblib": {
   "__set__": true,
   "elements": [
    "joblib"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "scipy.optimize": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.special": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.stats": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "sklearn.base": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.model_selection": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.pipeline": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.utils": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sparse": {
   "__set__": true,
   "elements": [
    "sparse"
   ]
  },
  "sparse._slicing": {
   "__set__": true,
   "elements": [
    "sparse"
   ]
  },
  "xlcompose": {
   "__set__": true,
   "elements": [
    "xlcompose"
   ]
  }
 },
 "required no match": {}
}