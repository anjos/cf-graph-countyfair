{
 "builtin": {},
 "questionable": {
  "IPython": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "ipython"
   ]
  },
  "cryptography.fernet": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "fiona": {
   "__set__": true,
   "elements": [
    "fiona"
   ]
  },
  "fiona.crs": {
   "__set__": true,
   "elements": [
    "fiona"
   ]
  },
  "geopandas": {
   "__set__": true,
   "elements": [
    "geopandas"
   ]
  },
  "geopy.exc": {
   "__set__": true,
   "elements": [
    "geopy"
   ]
  },
  "geopy.geocoders": {
   "__set__": true,
   "elements": [
    "geopy"
   ]
  },
  "igraph": {
   "__set__": true,
   "elements": [
    "python-igraph"
   ]
  },
  "networkx": {
   "__set__": true,
   "elements": [
    "networkx"
   ]
  },
  "numba": {
   "__set__": true,
   "elements": [
    "numba"
   ]
  },
  "numba._version": {
   "__set__": true,
   "elements": [
    "numba"
   ]
  },
  "pandapower": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.create": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pd2ppc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pd2ppc_zero": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.create_jacobian_numba": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.dSbus_dV_numba": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.makeYbus_numba": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.no_numba": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.pfsoln_numba": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeYbus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.idx_brch": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.idx_bus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.toolbox": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.topology": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.topology.graph_tool_interface": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "plotly": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "plotly"
   ]
  },
  "plotly.graph_objs": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "plotly"
   ]
  },
  "plotly.graph_objs.layout": {
   "__set__": true,
   "elements": [
    "plotly"
   ]
  },
  "plotly.graph_objs.scatter": {
   "__set__": true,
   "elements": [
    "plotly"
   ]
  },
  "plotly.graph_objs.scatter.marker": {
   "__set__": true,
   "elements": [
    "plotly"
   ]
  },
  "plotly.graph_objs.scattermapbox": {
   "__set__": true,
   "elements": [
    "plotly"
   ]
  },
  "plotly.offline": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "plotly"
   ]
  },
  "pyproj": {
   "__set__": true,
   "elements": [
    "pyproj"
   ]
  },
  "seaborn": {
   "__set__": true,
   "elements": [
    "seaborn",
    "seaborn-base"
   ]
  },
  "shapely.geometry": {
   "__set__": true,
   "elements": [
    "shapely",
    "solaris"
   ]
  },
  "singledispatch": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "singledispatch"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "graph_tool": {
   "__set__": true,
   "elements": [
    "graph-tool"
   ]
  },
  "matplotlib": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.backend_bases": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.cm": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.collections": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.colors": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.font_manager": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.patches": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.pyplot": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.textpath": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.transforms": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "networkx": {
   "__set__": true,
   "elements": [
    "networkx"
   ]
  },
  "networkx.readwrite": {
   "__set__": true,
   "elements": [
    "networkx"
   ]
  },
  "numba": {
   "__set__": true,
   "elements": [
    "numba"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.core.multiarray": {
   "__set__": true,
   "elements": [
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.core.numeric": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.core.umath": {
   "__set__": true,
   "elements": [
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.linalg": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "packaging": {
   "__set__": true,
   "elements": [
    "packaging"
   ]
  },
  "pandapower": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.auxiliary": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.build_branch": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.build_bus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.build_gen": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.basic_controller": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.controller": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.controller.const_control": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.controller.trafo.ContinuousTapControl": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.controller.trafo.DiscreteTapControl": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.controller.trafo_control": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.run_control": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.util.auxiliary": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.control.util.diagnostic": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.convert_format": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.matpower": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.matpower.from_mpc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.matpower.to_mpc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.powermodels": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.powermodels.from_pm": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.powermodels.to_pm": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.pypower": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.pypower.from_ppc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.converter.pypower.to_ppc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.create": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.diagnostic": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.diagnostic_reports": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.algorithm.base": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.algorithm.estimator": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.algorithm.lp": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.algorithm.matrix_base": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.algorithm.optimization": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.idx_brch": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.idx_bus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.ppc_conversion": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.results": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.state_estimation": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.estimation.util": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.file_io": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.io_utils": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.cigre_networks": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.create_examples": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.dickert_lv_networks": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.ieee_europen_lv_asymmetric": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.kerber_extreme_networks": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.kerber_networks": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.mv_oberrhein": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.power_system_test_cases": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.simple_pandapower_test_networks": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.networks.synthetic_voltage_control_lv_networks": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.opf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.opf.make_objective": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.opf.pm_storage": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.opf.run_powermodels": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.opf.validate_opf_input": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.optimal_powerflow": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pd2ppc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pd2ppc_zero": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.create_jacobian": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.iwamoto_multiplier": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.pfsoln_numba": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.ppci_variables": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.run_bfswpf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.run_dc_pf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.run_newton_raphson_pf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.runpf_pypower": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pf.runpp_3ph": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.collections": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.colormaps": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.generic_geodata": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.geo": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.patch_makers": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly.get_colors": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly.mapbox_plot": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly.pf_res_plotly": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly.simple_plotly": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly.traces": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotly.vlevel_plotly": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.plotting_toolbox": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.powerflow_results": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.simple_plot": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.plotting.to_html": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.powerflow": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower._compat": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.add_userfcn": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.bustypes": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.d2AIbr_dV2": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.d2ASbr_dV2": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.d2Ibr_dV2": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.d2Sbr_dV2": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.d2Sbus_dV2": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.dAbr_dV": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.dIbr_dV": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.dSbr_dV": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.dSbus_dV": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.dcopf_solver": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.dcpf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.fdpf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.gausspf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.hasPQcap": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.idx_area": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.idx_brch": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.idx_bus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.idx_cost": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.idx_gen": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.isload": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeAang": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeApq": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeAvl": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeAy": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeB": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeBdc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeSbus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.makeYbus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.newtonpf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf_args": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf_consfcn": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf_costfcn": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf_execute": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf_hessfcn": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf_model": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.opf_setup": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.pfsoln": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.pips": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.pipsopf_solver": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.pipsver": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.polycost": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.ppoption": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.ppver": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.pqcost": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.printpf": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.qps_pips": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.qps_pypower": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.run_userfcn": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.totcost": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.update_mupq": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.pypower.util": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.results": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.results_branch": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.results_bus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.results_gen": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.run": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.runpm": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.calc_sc": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.currents": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.idx_brch": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.idx_bus": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.impedance": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.kappa": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.shortcircuit.results": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.std_types": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.timeseries.data_source": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.timeseries.data_sources.frame_data": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.timeseries.output_writer": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.timeseries.read_batch_results": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.timeseries.run_time_series": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.toolbox": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.topology": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.topology.create_graph": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandapower.topology.graph_searches": {
   "__set__": true,
   "elements": [
    "pandapower"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "pandas.testing": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "scipy": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.io": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.linalg": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.optimize": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse.linalg": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.stats": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "six": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "bleach",
    "dbxfs",
    "flask-rest-orm",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "happybase",
    "lldb",
    "privy",
    "pyamg",
    "pyscss",
    "rust",
    "signac-dashboard",
    "six"
   ]
  }
 },
 "required no match": {}
}