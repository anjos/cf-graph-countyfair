{
 "builtin": {},
 "questionable": {
  "Cython.Build": {
   "__set__": true,
   "elements": [
    "cython"
   ]
  },
  "deeptime": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.clustering": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.data.bickley_simulator": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.data.birth_death_chain_dataset": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.data.double_well_dataset": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.data.drunkards_walk_simulator": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.data.ellipsoids_dataset": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.data.pbf_simulator": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov._transition_matrix": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.hmm": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.hmm.util": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.msm": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.sample": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.analysis": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.analysis.dense.decomposition": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.analysis.dense.stationary_vector": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.estimation": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.estimation.dense.mle": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.estimation.sparse.transition_matrix": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.util": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.metrics": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.numeric.eigen": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.types": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "matplotlib": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.animation": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.collections": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.patches": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.pyplot": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "networkx": {
   "__set__": true,
   "elements": [
    "networkx"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.distutils.core": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.distutils.misc_util": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "petsc4py": {
   "__set__": true,
   "elements": [
    "petsc4py"
   ]
  },
  "scipy.interpolate": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.linalg": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.optimize": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.stats": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "sklearn.mixture": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.utils.random": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "slepc4py": {
   "__set__": true,
   "elements": [
    "slepc4py"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "deeptime.base": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.clustering.cluster_model": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov._base": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov._transition_matrix": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.hmm": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.hmm._hmm_bindings": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.hmm.hidden_markov_model": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.hmm.output_model": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.hmm.util": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.msm": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.pcca": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.reactive_flux": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.sample": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.analysis": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.estimation": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.tools.flux": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.transition_counting": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.markov.util": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.numeric": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.numeric.eigen": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.numeric.utils": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.decorators": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.exceptions": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.matrix": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.parallel": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.platform": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.stats": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "deeptime.util.types": {
   "__set__": true,
   "elements": [
    "deeptime"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.distutils.command.build_ext": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "numpy.distutils.misc_util": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "pybind11": {
   "__set__": true,
   "elements": [
    "pybind11"
   ]
  },
  "pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "scipy": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.integrate": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.linalg": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.optimize": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse.base": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse.construct": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse.csgraph": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse.csr": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse.linalg": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.sparse.sputils": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.spatial": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.special": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "sklearn.base": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.exceptions": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.linear_model": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.metrics": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.pipeline": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.preprocessing": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "sklearn.utils.validation": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "torch": {
   "__set__": true,
   "elements": [
    "pytorch",
    "pytorch-cpu"
   ]
  },
  "torch.nn": {
   "__set__": true,
   "elements": [
    "pytorch",
    "pytorch-cpu"
   ]
  },
  "torch.utils.data": {
   "__set__": true,
   "elements": [
    "pytorch",
    "pytorch-cpu"
   ]
  },
  "versioneer": {
   "__set__": true,
   "elements": [
    "diffusioncma",
    "splauncher",
    "versioneer"
   ]
  }
 },
 "required no match": {}
}