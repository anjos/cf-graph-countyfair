{
 "builtin": {},
 "questionable": {
  "IPython.lib.pretty": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "ipython"
   ]
  },
  "jax": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax._src.lax": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.lax": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.numpy": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.ops": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.random": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.util": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "matplotlib.pyplot": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "networkx": {
   "__set__": true,
   "elements": [
    "networkx"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "scipy": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "tensorflow.compat": {
   "__set__": true,
   "elements": [
    "tensorflow"
   ]
  },
  "tensorflow.compiler.tf2xla.python": {
   "__set__": true,
   "elements": [
    "tensorflow-base"
   ]
  },
  "tensorflow.python": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.autograph.core": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.autograph.pyct": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.client": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.eager": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.framework": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.ops": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.util": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow_probability": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distributions": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_block_diag": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_block_lower_triangular": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_circulant": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_composition": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_diag": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_full_matrix": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_householder": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_identity": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_kronecker": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_low_rank_update": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_lower_triangular": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_toeplitz": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.linear_operator_zeros": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.util.deferred_tensor": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tqdm": {
   "__set__": true,
   "elements": [
    "tqdm"
   ]
  },
  "wrapt": {
   "__set__": true,
   "elements": [
    "wrapt"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "absl": {
   "__set__": true,
   "elements": [
    "absl-py"
   ]
  },
  "absl.testing": {
   "__set__": true,
   "elements": [
    "absl-py"
   ]
  },
  "cloudpickle": {
   "__set__": true,
   "elements": [
    "cloudpickle"
   ]
  },
  "decorator": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "decorator",
    "jupyter_kernel_test"
   ]
  },
  "gast": {
   "__set__": true,
   "elements": [
    "gast"
   ]
  },
  "hypothesis": {
   "__set__": true,
   "elements": [
    "hypothesis"
   ]
  },
  "hypothesis.extra": {
   "__set__": true,
   "elements": [
    "hypothesis"
   ]
  },
  "hypothesis.extra.numpy": {
   "__set__": true,
   "elements": [
    "hypothesis"
   ]
  },
  "hypothesis.strategies": {
   "__set__": true,
   "elements": [
    "hypothesis"
   ]
  },
  "jax": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax._src": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.config": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.experimental": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.interpreters": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.lib.xla_bridge": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "jax.numpy": {
   "__set__": true,
   "elements": [
    "jax"
   ]
  },
  "mock": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "mock"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "opt_einsum": {
   "__set__": true,
   "elements": [
    "opt-einsum",
    "opt_einsum"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "scipy": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.integrate": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.linalg": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.optimize": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.special": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "scipy.stats": {
   "__set__": true,
   "elements": [
    "pyamg",
    "scipy"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.command.install": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.dist": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "six": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "bleach",
    "dbxfs",
    "flask-rest-orm",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "happybase",
    "lldb",
    "privy",
    "pyamg",
    "pyscss",
    "rust",
    "signac-dashboard",
    "six"
   ]
  },
  "tensorflow.compat": {
   "__set__": true,
   "elements": [
    "tensorflow"
   ]
  },
  "tensorflow.python": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.autograph.converters": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.autograph.core": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.autograph.pyct": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.autograph.pyct.common_transformers": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.autograph.pyct.static_analysis": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.eager": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.framework": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.framework.composite_tensor": {
   "__set__": true,
   "elements": [
    "tensorflow-base"
   ]
  },
  "tensorflow.python.keras": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.keras.utils": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.layers": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.ops": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.ops.linalg": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.saved_model": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.training": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.util": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow_probability": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.absolute_value": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.affine": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.affine_linear_operator": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.affine_scalar": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.ascending": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.batch_normalization": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.bijector": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.blockwise": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.chain": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.cholesky_outer_product": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.cholesky_to_inv_cholesky": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.composition": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.correlation_cholesky": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.cumsum": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.discrete_cosine_transform": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.exp": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.expm1": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.ffjord": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.fill_scale_tril": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.fill_triangular": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.frechet_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.generalized_pareto": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.gev_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.glow": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.gompertz_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.gumbel_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.identity": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.inline": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.invert": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.iterated_sigmoid_centered": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.joint_map": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.kumaraswamy_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.lambertw_transform": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.ldj_ratio": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.masked_autoregressive": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.matrix_inverse_tril": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.moyal_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.normal_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.ordered": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.pad": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.permute": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.power": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.power_transform": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.rational_quadratic_spline": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.rayleigh_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.real_nvp": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.reciprocal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.reshape": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.restructure": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.scale": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.scale_matvec_diag": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.scale_matvec_linear_operator": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.scale_matvec_lu": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.scale_matvec_tril": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.shift": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.shifted_gompertz_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.sigmoid": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.sinh": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.sinh_arcsinh": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.soft_clip": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.softfloor": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.softmax_centered": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.softplus": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.softsign": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.split": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.square": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.tanh": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.transform_diagonal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.transpose": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.bijectors.weibull_cdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.debugging": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.debugging.benchmarking.benchmark_tf_function": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.autoregressive": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.batch_reshape": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.bates": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.bernoulli": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.beta": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.beta_binomial": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.binomial": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.blockwise": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.categorical": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.cauchy": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.chi": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.chi2": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.cholesky_lkj": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.continuous_bernoulli": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.deterministic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.dirichlet": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.dirichlet_multinomial": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.distribution": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.doublesided_maxwell": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.empirical": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.exp_gamma": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.exponential": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.exponentially_modified_gaussian": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.finite_discrete": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.gamma": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.gamma_gamma": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.gaussian_process": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.gaussian_process_regression_model": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.generalized_normal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.generalized_pareto": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.geometric": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.gev": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.gumbel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.half_cauchy": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.half_normal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.half_student_t": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.hidden_markov_model": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.horseshoe": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.independent": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.inverse_gamma": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.inverse_gaussian": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.johnson_su": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.joint_distribution": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.joint_distribution_auto_batched": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.joint_distribution_coroutine": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.joint_distribution_named": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.joint_distribution_sequential": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.joint_distribution_util": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.kullback_leibler": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.kumaraswamy": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.laplace": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.linear_gaussian_ssm": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.lkj": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.log_prob_ratio": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.logistic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.logitnormal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.loglogistic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.lognormal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.mixture": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.mixture_same_family": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.moyal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.multinomial": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.multivariate_student_t": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.mvn_diag": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.mvn_diag_plus_low_rank": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.mvn_full_covariance": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.mvn_linear_operator": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.mvn_tril": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.negative_binomial": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.normal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.normal_conjugate_posteriors": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.onehot_categorical": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.ordered_logistic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.pareto": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.pert": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.pixel_cnn": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.plackett_luce": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.poisson": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.poisson_lognormal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.power_spherical": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.probit_bernoulli": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.quantized_distribution": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.relaxed_bernoulli": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.relaxed_onehot_categorical": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.sample": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.sinh_arcsinh": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.skellam": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.spherical_uniform": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.stopping_ratio_logistic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.student_t": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.student_t_process": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.transformed_distribution": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.triangular": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.truncated_cauchy": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.truncated_normal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.uniform": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.variational_gaussian_process": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.vector_exponential_diag": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.von_mises": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.von_mises_fisher": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.weibull": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.wishart": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.distributions.zipf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.auto_batching": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.auto_batching.frontend": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.auto_batching.instructions": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.auto_batching.numpy_backend": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.auto_batching.tf_backend": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.bijectors.scalar_function_with_inferred_inverse": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.composite_tensor": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distribute": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distribute.distribute_lib": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distribute.joint_distribution": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distribute.sharded": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distributions": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distributions.joint_distribution_pinned": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.distributions.mvn_precision_factor_linop": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones.deferred": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones.deferred_scope": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones.utils": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones.utils.probability": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones.utils.special_methods": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones.utils.utils": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.lazybones.utils.weak_container": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.linalg.linear_operator_psd_kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.marginalize": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.marginalize.logeinsumexp": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.marginalize.marginalizable": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.covariance_reducer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.diagonal_mass_matrix_adaptation": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.elliptical_slice_sampler": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.expectations_reducer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.gradient_based_trajectory_length_adaptation": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.kernel_builder": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.kernel_outputs": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.nuts_autobatching": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.particle_filter": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.particle_filter_augmentation": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.potential_scale_reduction_reducer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.preconditioned_hmc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.progress_bar_reducer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.reducer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.run": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.sample": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.sample_discarding_kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.sample_fold": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.sample_sequential_monte_carlo": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.sequential_monte_carlo_kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.thinning_kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.tracing_reducer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.weighted_resampling": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.mcmc.with_reductions": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.affine_layers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.convolutional_layers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.convolutional_layers_v2": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.convolutional_transpose_layers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.initializers.initializers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.layers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.util": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.util.convolution_util": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.util.random_variable": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.util.utils": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.nn.variational_base": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.parallel_filter": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.parallel_filter.parallel_kalman_filter_lib": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.sequential": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.sequential.ensemble_adjustment_kalman_filter": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.sequential.ensemble_kalman_filter": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.sequential.extended_kalman_filter": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.sequential.iterated_filter": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.stats": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.stats.sample_stats": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.sts_gibbs": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.util.deferred_module": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.vi": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.experimental.vi.surrogate_posteriors": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.glm": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.glm.family": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.glm.fisher_scoring": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.glm.proximal_hessian": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.auto_composite_tensor": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.control_flow": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.dtype": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.functional_ops": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.gen.tensor_shape": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.linalg_impl": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.misc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.numpy_array": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.numpy_math": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.ops": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.random_generators": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.backend.numpy.tensor_array_ops": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.hypothesis_testlib": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.monte_carlo": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.reparameterization": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.internal.samplers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.conv_variational": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.dense_variational": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.dense_variational_v2": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.distribution_layer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.initializers": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.masked_autoregressive": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.util": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.layers.variable_input": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.bessel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.custom_gradient": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.diag_jacobian": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.generic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.gradient": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.gram_schmidt": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.interpolation": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.linalg": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.minimize": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.numeric": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.ode": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.ode.base": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.ode.bdf": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.ode.dormand_prince": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.exp_sin_squared": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.exponentiated_quadratic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.feature_scaled": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.feature_transformed": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.kumaraswamy_transformed": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.matern": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.parabolic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.polynomial": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.positive_semidefinite_kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.rational_quadratic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.psd_kernels.schur_complement": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.root_search": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.scan_associative": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.sparse": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.math.special": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.diagnostic": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.dual_averaging_step_size_adaptation": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.eight_schools_hmc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.hmc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.internal.util": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.langevin": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.metropolis_hastings": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.nuts": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.random_walk_metropolis": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.replica_exchange_mc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.sample": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.sample_annealed_importance": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.sample_halton_sequence": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.simple_step_size_adaptation": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.slice_sampler_kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.text_messages_hmc": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.mcmc.transformed_kernel": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.monte_carlo": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.monte_carlo.expectation": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.bfgs": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.bfgs_utils": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.convergence_criteria": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.convergence_criteria.convergence_criterion": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.convergence_criteria.loss_not_decreasing": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.convergence_criteria.successive_gradients_are_uncorrelated": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.differential_evolution": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.lbfgs": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.linesearch.hager_zhang": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.linesearch.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.nelder_mead": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.proximal_hessian_sparse": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.sgld": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.optimizer.variational_sgd": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.random": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.random.random_ops": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.stats": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.stats.calibration": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.stats.leave_one_out": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.stats.moving_stats": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.stats.quantiles": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.stats.ranking": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.stats.sample_stats": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.autoregressive": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.decomposition": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.dynamic_regression": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.fitting": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.forecast": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.internal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.internal.missing_values_util": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.local_level": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.local_linear_trend": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.regression": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.seasonal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.semilocal_linear_trend": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.smooth_seasonal": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.structural_time_series": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.sts.sum": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.util": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.util.deferred_tensor": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.util.seed_stream": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.version": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.vi": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.vi.csiszar_divergence": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.python.vi.optimization": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.substrates": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.substrates.jax": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tensorflow_probability.substrates.numpy": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "tree": {
   "__set__": true,
   "elements": [
    "dm-tree"
   ]
  },
  "version": {
   "__set__": true,
   "elements": [
    "telegram-send"
   ]
  }
 },
 "required no match": {}
}