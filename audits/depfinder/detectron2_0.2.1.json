{
 "builtin": {
  "__set__": true,
  "elements": [
   "__future__",
   "abc",
   "argparse",
   "base64",
   "bisect",
   "builtins",
   "collections",
   "collections.abc",
   "colorsys",
   "contextlib",
   "copy",
   "dataclasses",
   "datetime",
   "enum",
   "functools",
   "glob",
   "importlib",
   "importlib.util",
   "inspect",
   "io",
   "itertools",
   "json",
   "logging",
   "math",
   "multiprocessing",
   "operator",
   "os",
   "pickle",
   "pprint",
   "random",
   "re",
   "shutil",
   "socket",
   "struct",
   "subprocess",
   "sys",
   "tempfile",
   "time",
   "timeit",
   "types",
   "typing",
   "weakref",
   "xml.etree.ElementTree"
  ]
 },
 "questionable": {
  "__set__": true,
  "elements": [
   "av",
   "detectron2",
   "fvcore",
   "matplotlib",
   "numexpr",
   "numpy",
   "opencv",
   "pillow",
   "pycocotools",
   "pytorch-cpu",
   "pyyaml",
   "scipy",
   "shapely",
   "torchvision"
  ]
 },
 "questionable no match": {
  "__set__": true,
  "elements": [
   "cityscapesscripts.evaluation.evalInstanceLevelSemanticLabeling",
   "cityscapesscripts.evaluation.evalPixelLevelSemanticLabeling",
   "cityscapesscripts.helpers.labels",
   "lvis",
   "panopticapi.evaluation",
   "panopticapi.utils"
  ]
 },
 "required": {
  "__set__": true,
  "elements": [
   "av",
   "cloudpickle",
   "detectron2",
   "fvcore",
   "matplotlib",
   "mock",
   "numpy",
   "onnx",
   "opencv",
   "pillow",
   "psutil",
   "pycocotools",
   "pytorch-cpu",
   "scipy",
   "setuptools",
   "tabulate",
   "termcolor",
   "torchvision",
   "torchvision.ops",
   "tqdm"
  ]
 },
 "required no match": {
  "__set__": true,
  "elements": [
   "deeplab",
   "densepose",
   "densepose.config",
   "densepose.data",
   "densepose.data.structures",
   "densepose.engine",
   "densepose.modeling.densepose_checkpoint",
   "densepose.utils.dbhelper",
   "densepose.utils.logger",
   "densepose.vis.base",
   "densepose.vis.bounding_box",
   "densepose.vis.densepose",
   "densepose.vis.extractor",
   "panopticapi.utils",
   "point_rend",
   "tensormask",
   "tensormask.layers",
   "tridentnet"
  ]
 }
}