{
 "builtin": {},
 "questionable": {
  "cryptography.exceptions": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.backends": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.backends.openssl.backend": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.asymmetric": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.asymmetric.ed25519": {
   "__set__": true,
   "elements": [
    "cryptography"
   ]
  },
  "cryptography.hazmat.primitives.asymmetric.x25519": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.ciphers": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.serialization": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.utils": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "mock": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "mock"
   ]
  },
  "pep8": {
   "__set__": true,
   "elements": [
    "pep8"
   ]
  },
  "pycodestyle": {
   "__set__": true,
   "elements": [
    "pycodestyle"
   ]
  },
  "pyflakes.api": {
   "__set__": true,
   "elements": [
    "pyflakes"
   ]
  },
  "pyflakes.reporter": {
   "__set__": true,
   "elements": [
    "pyflakes"
   ]
  },
  "stem.connection": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.interpreter.arguments": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.interpreter.autocomplete": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.interpreter.commands": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.add_onion": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.authchallenge": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.events": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.getconf": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.getinfo": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.mapaddress": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.protocolinfo": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.lru_cache": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.ordereddict": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.str_tools": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "zstd": {
   "__set__": true,
   "elements": [
    "zstandard"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "stem": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.client": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.client.cell": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.client.datatype": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.connection": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.control": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.bandwidth_file": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.certificate": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.extrainfo_descriptor": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.hidden_service": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.microdescriptor": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.networkstatus": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.reader": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.remote": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.router_status_entry": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.server_descriptor": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.descriptor.tordnsel": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.directory": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.exit_policy": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.interpreter": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.interpreter.help": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.manual": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.prereq": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.process": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.response.events": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.socket": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.conf": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.connection": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.enum": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.log": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.proc": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.str_tools": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.system": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.term": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.test_tools": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.util.tor_tools": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  },
  "stem.version": {
   "__set__": true,
   "elements": [
    "stem"
   ]
  }
 },
 "required no match": {}
}