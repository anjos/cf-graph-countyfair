{
 "builtin": {},
 "questionable": {
  "Browser": {
   "__set__": true,
   "elements": [
    "robotframework-browser"
   ]
  },
  "RPA.recognition": {
   "__set__": true,
   "elements": [
    "rpaframework-recognition"
   ]
  },
  "SapGuiLibrary": {
   "__set__": true,
   "elements": [
    "robotframework-sapguilibrary"
   ]
  },
  "apiclient": {
   "__set__": true,
   "elements": [
    "google-api-python-client"
   ]
  },
  "boto3": {
   "__set__": true,
   "elements": [
    "boto3"
   ]
  },
  "boto3.exceptions": {
   "__set__": true,
   "elements": [
    "boto3"
   ]
  },
  "botocore.exceptions": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "cv2": {
   "__set__": true,
   "elements": [
    "libopencv",
    "opencv"
   ]
  },
  "google.auth.transport.requests": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.cloud.language_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-language"
   ]
  },
  "google.cloud.texttospeech_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-texttospeech"
   ]
  },
  "google.oauth2": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.protobuf.json_format": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "protobuf"
   ]
  },
  "google_auth_oauthlib.flow": {
   "__set__": true,
   "elements": [
    "google-auth-oauthlib"
   ]
  },
  "googleapiclient.discovery": {
   "__set__": true,
   "elements": [
    "google-api-python-client"
   ]
  },
  "importlib_resources": {
   "__set__": true,
   "elements": [
    "importlib_resources"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "psutil": {
   "__set__": true,
   "elements": [
    "psutil"
   ]
  },
  "psutil._common": {
   "__set__": true,
   "elements": [
    "psutil"
   ]
  },
  "pynput_robocorp.keyboard": {
   "__set__": true,
   "elements": [
    "pynput-robocorp-fork"
   ]
  },
  "pynput_robocorp.mouse": {
   "__set__": true,
   "elements": [
    "pynput-robocorp-fork"
   ]
  },
  "pywinauto": {
   "__set__": true,
   "elements": [
    "pywinauto"
   ]
  },
  "win32com.client": {
   "__set__": true,
   "elements": [
    "pywin32"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "PIL": {
   "__set__": true,
   "elements": [
    "inkscape",
    "pillow",
    "pyautogui"
   ]
  },
  "PyPDF2": {
   "__set__": true,
   "elements": [
    "pypdf2"
   ]
  },
  "PyPDF2.generic": {
   "__set__": true,
   "elements": [
    "pypdf2"
   ]
  },
  "RPA.core": {
   "__set__": true,
   "elements": [
    "rpaframework-core"
   ]
  },
  "RPA.core.decorators": {
   "__set__": true,
   "elements": [
    "rpaframework-core"
   ]
  },
  "RPA.core.geometry": {
   "__set__": true,
   "elements": [
    "rpaframework-core"
   ]
  },
  "RPA.core.helpers": {
   "__set__": true,
   "elements": [
    "rpaframework-core"
   ]
  },
  "RPA.core.locators": {
   "__set__": true,
   "elements": [
    "rpaframework-core"
   ]
  },
  "RPA.core.notebook": {
   "__set__": true,
   "elements": [
    "rpaframework-core"
   ]
  },
  "RPA.core.types": {
   "__set__": true,
   "elements": [
    "rpaframework-core"
   ]
  },
  "RequestsLibrary": {
   "__set__": true,
   "elements": [
    "robotframework-requests"
   ]
  },
  "SeleniumLibrary": {
   "__set__": true,
   "elements": [
    "robotframework-seleniumlibrary"
   ]
  },
  "SeleniumLibrary.base": {
   "__set__": true,
   "elements": [
    "robotframework-seleniumlibrary"
   ]
  },
  "SeleniumLibrary.errors": {
   "__set__": true,
   "elements": [
    "robotframework-seleniumlibrary"
   ]
  },
  "SeleniumLibrary.keywords": {
   "__set__": true,
   "elements": [
    "robotframework-seleniumlibrary"
   ]
  },
  "cryptography.exceptions": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.backends": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.asymmetric": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.ciphers.aead": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "exchangelib": {
   "__set__": true,
   "elements": [
    "exchangelib"
   ]
  },
  "fpdf": {
   "__set__": true,
   "elements": [
    "fpdf"
   ]
  },
  "google_auth_oauthlib.flow": {
   "__set__": true,
   "elements": [
    "google-auth-oauthlib"
   ]
  },
  "graphviz": {
   "__set__": true,
   "elements": [
    "python-graphviz"
   ]
  },
  "jsonpath_ng": {
   "__set__": true,
   "elements": [
    "jsonpath-ng"
   ]
  },
  "jsonpath_ng.ext": {
   "__set__": true,
   "elements": [
    "jsonpath-ng"
   ]
  },
  "mss": {
   "__set__": true,
   "elements": [
    "python-mss"
   ]
  },
  "netsuitesdk": {
   "__set__": true,
   "elements": [
    "netsuitesdk"
   ]
  },
  "netsuitesdk.internal.client": {
   "__set__": true,
   "elements": [
    "netsuitesdk"
   ]
  },
  "netsuitesdk.internal.utils": {
   "__set__": true,
   "elements": [
    "netsuitesdk"
   ]
  },
  "notifiers": {
   "__set__": true,
   "elements": [
    "notifiers"
   ]
  },
  "openpyxl": {
   "__set__": true,
   "elements": [
    "openpyxl"
   ]
  },
  "openpyxl.utils": {
   "__set__": true,
   "elements": [
    "openpyxl"
   ]
  },
  "pdfminer.converter": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six",
    "pdfminer3k"
   ]
  },
  "pdfminer.layout": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six",
    "pdfminer3k"
   ]
  },
  "pdfminer.pdfdocument": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six"
   ]
  },
  "pdfminer.pdfinterp": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six",
    "pdfminer3k"
   ]
  },
  "pdfminer.pdfpage": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six"
   ]
  },
  "pdfminer.pdfparser": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six",
    "pdfminer3k"
   ]
  },
  "pdfminer.pdftypes": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six",
    "pdfminer3k"
   ]
  },
  "pdfminer.utils": {
   "__set__": true,
   "elements": [
    "pdfminer",
    "pdfminer.six",
    "pdfminer3k"
   ]
  },
  "pyperclip": {
   "__set__": true,
   "elements": [
    "pyperclip"
   ]
  },
  "requests": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "requests.exceptions": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "robot.api": {
   "__set__": true,
   "elements": [
    "robotframework"
   ]
  },
  "robot.api.deco": {
   "__set__": true,
   "elements": [
    "robotframework"
   ]
  },
  "robot.errors": {
   "__set__": true,
   "elements": [
    "robotframework"
   ]
  },
  "robot.libraries.BuiltIn": {
   "__set__": true,
   "elements": [
    "robotframework"
   ]
  },
  "robot.running.context": {
   "__set__": true,
   "elements": [
    "robotframework"
   ]
  },
  "robotlibcore": {
   "__set__": true,
   "elements": [
    "robotframework-pythonlibcore"
   ]
  },
  "selenium.webdriver": {
   "__set__": true,
   "elements": [
    "selenium"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "simple_salesforce": {
   "__set__": true,
   "elements": [
    "simple-salesforce"
   ]
  },
  "tweepy": {
   "__set__": true,
   "elements": [
    "tweepy"
   ]
  },
  "tweepy.error": {
   "__set__": true,
   "elements": [
    "tweepy"
   ]
  },
  "xlrd": {
   "__set__": true,
   "elements": [
    "xlrd"
   ]
  },
  "xlutils.copy": {
   "__set__": true,
   "elements": [
    "xlutils"
   ]
  },
  "xlwt": {
   "__set__": true,
   "elements": [
    "xlwt"
   ]
  }
 },
 "required no match": {}
}