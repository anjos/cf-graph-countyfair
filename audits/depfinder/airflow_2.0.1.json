{
 "builtin": {},
 "questionable": {
  "MySQLdb": {
   "__set__": true,
   "elements": [
    "mysql-python",
    "mysqlclient"
   ]
  },
  "MySQLdb.converters": {
   "__set__": true,
   "elements": [
    "mysql-python",
    "mysqlclient"
   ]
  },
  "MySQLdb.cursors": {
   "__set__": true,
   "elements": [
    "mysql-python",
    "mysqlclient"
   ]
  },
  "airflow": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.mark_tasks": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.configuration": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.exceptions": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors.celery_executor": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors.kubernetes_executor": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors.local_executor": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.hooks": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.jobs.backfill_job": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.jobs.base_job": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.jobs.local_task_job": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.kube_client": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.pod_generator": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.refresh_config": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.macros": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.base": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.baseoperator": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.connection": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dag": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dagcode": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dagrun": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.pool": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.renderedtifields": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.serialized_dag": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.skipmixin": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.taskinstance": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.variable": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.xcom": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.operators": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.plugins_manager": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.secrets": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.sensors": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.sentry": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.base_ti_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.operator_helpers": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.sqlalchemy": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.state": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.timezone": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www.api.experimental": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www.blueprints": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "alembic": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "alembic.config": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "alembic.runtime.migration": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "alembic.script": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "blinker": {
   "__set__": true,
   "elements": [
    "blinker",
    "flask-debugtoolbar"
   ]
  },
  "click": {
   "__set__": true,
   "elements": [
    "black",
    "click",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "signac-dashboard"
   ]
  },
  "colorama": {
   "__set__": true,
   "elements": [
    "colorama",
    "pyamg"
   ]
  },
  "datadog": {
   "__set__": true,
   "elements": [
    "datadog"
   ]
  },
  "dateutil.tz": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jupyter_kernel_test",
    "python-dateutil"
   ]
  },
  "flask_appbuilder.fieldwidgets": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.models.sqla": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_babel": {
   "__set__": true,
   "elements": [
    "flask-babel"
   ]
  },
  "git": {
   "__set__": true,
   "elements": [
    "gitpython"
   ]
  },
  "google.auth": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth.compute_engine": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth.transport": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "hdfs.ext.kerberos": {
   "__set__": true,
   "elements": [
    "python-hdfs"
   ]
  },
  "hmsclient": {
   "__set__": true,
   "elements": [
    "hmsclient"
   ]
  },
  "httplib2": {
   "__set__": true,
   "elements": [
    "httplib2"
   ]
  },
  "importlib_metadata": {
   "__set__": true,
   "elements": [
    "importlib-metadata",
    "importlib_metadata"
   ]
  },
  "importlib_resources": {
   "__set__": true,
   "elements": [
    "importlib_resources"
   ]
  },
  "jinja2": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jinja2",
    "signac-dashboard"
   ]
  },
  "jinja2.ext": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jinja2",
    "signac-dashboard"
   ]
  },
  "kubernetes": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client.api_client": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client.rest": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "lxml": {
   "__set__": true,
   "elements": [
    "inkscape",
    "lxml",
    "pyexcel-ods3"
   ]
  },
  "mysql.connector": {
   "__set__": true,
   "elements": [
    "mysql-connector-python"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "pandas.io": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "pendulum": {
   "__set__": true,
   "elements": [
    "pendulum"
   ]
  },
  "pep562": {
   "__set__": true,
   "elements": [
    "pep562"
   ]
  },
  "pyhive.exc": {
   "__set__": true,
   "elements": [
    "pyhive"
   ]
  },
  "pyhive.hive": {
   "__set__": true,
   "elements": [
    "pyhive"
   ]
  },
  "pymysql.converters": {
   "__set__": true,
   "elements": [
    "pymysql"
   ]
  },
  "requests": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "rich": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "rich.console": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "rich.markup": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "sasl": {
   "__set__": true,
   "elements": [
    "sasl"
   ]
  },
  "sentry_sdk": {
   "__set__": true,
   "elements": [
    "dbxfs",
    "sentry-sdk"
   ]
  },
  "sentry_sdk.integrations.celery": {
   "__set__": true,
   "elements": [
    "dbxfs",
    "sentry-sdk"
   ]
  },
  "sentry_sdk.integrations.flask": {
   "__set__": true,
   "elements": [
    "dbxfs",
    "sentry-sdk"
   ]
  },
  "sentry_sdk.integrations.logging": {
   "__set__": true,
   "elements": [
    "dbxfs",
    "sentry-sdk"
   ]
  },
  "setup": {
   "__set__": true,
   "elements": [
    "flatten_json",
    "pycalverter",
    "pyjnius"
   ]
  },
  "setuptools.config": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "snakebite.client": {
   "__set__": true,
   "elements": [
    "snakebite",
    "snakebite-py3"
   ]
  },
  "sqlalchemy.ext.declarative": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.orm": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "statsd": {
   "__set__": true,
   "elements": [
    "statsd"
   ]
  },
  "tabulate": {
   "__set__": true,
   "elements": [
    "tabulate"
   ]
  },
  "thrift.protocol": {
   "__set__": true,
   "elements": [
    "hive-thrift-py",
    "pymapd",
    "python-awips",
    "thrift"
   ]
  },
  "thrift.transport": {
   "__set__": true,
   "elements": [
    "hive-thrift-py",
    "pymapd",
    "python-awips",
    "thrift"
   ]
  },
  "thrift_sasl": {
   "__set__": true,
   "elements": [
    "thrift_sasl"
   ]
  },
  "typing_extensions": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-storage-core",
    "typing_extensions"
   ]
  },
  "urllib3.connection": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "sentry-sdk",
    "urllib3"
   ]
  },
  "wtforms": {
   "__set__": true,
   "elements": [
    "wtforms"
   ]
  },
  "wtforms.validators": {
   "__set__": true,
   "elements": [
    "wtforms"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "MySQLdb": {
   "__set__": true,
   "elements": [
    "mysql-python",
    "mysqlclient"
   ]
  },
  "MySQLdb.constants": {
   "__set__": true,
   "elements": [
    "mysql-python",
    "mysqlclient"
   ]
  },
  "airflow": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.client": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.client.api_client": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.get_code": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.get_dag_run_state": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.get_dag_runs": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.get_task": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.get_task_instance": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.mark_tasks": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.api.common.experimental.trigger_dag": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.config_templates.default_celery": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.configuration": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.example_dags": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.example_dags.subdags.subdag": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.exceptions": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors.base_executor": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors.celery_executor": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors.debug_executor": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.executors.kubernetes_executor": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.hooks": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.jobs.backfill_job": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.jobs.base_job": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.jobs.local_task_job": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.jobs.scheduler_job": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.k8s_model": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.kube_client": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.pod": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.pod_generator": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.pod_launcher": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.pod_runtime_info_env": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.secret": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.volume": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.kubernetes.volume_mount": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.lineage": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.logging_config": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.macros": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.base": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.baseoperator": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.connection": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.crypto": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dag": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dagbag": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dagcode": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dagpickle": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.dagrun": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.errors": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.log": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.pool": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.renderedtifields": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.serialized_dag": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.skipmixin": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.slamiss": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.taskfail": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.taskinstance": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.taskreschedule": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.variable": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.models.xcom": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.operators": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.operators.bash_operator": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.operators.check_operator": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.operators.sql": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.plugins_manager": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.providers.imap.hooks.imap": {
   "__set__": true,
   "elements": [
    "apache-airflow-providers-imap"
   ]
  },
  "airflow.providers.imap.sensors.imap_attachment": {
   "__set__": true,
   "elements": [
    "apache-airflow-providers-imap"
   ]
  },
  "airflow.secrets": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.secrets.base_secrets": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.security": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.security.kerberos": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.sensors": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.sentry": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.serialization.enums": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.serialization.helpers": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.serialization.json_schema": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.serialization.serialized_objects": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.settings": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.task.task_runner": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.task.task_runner.base_task_runner": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.dep_context": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.base_ti_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.dag_ti_slots_available_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.dag_unpaused_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.dagrun_exists_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.dagrun_id_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.exec_date_after_start_date_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.not_in_retry_period_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.not_previously_skipped_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.pool_slots_available_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.prev_dagrun_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.ready_to_reschedule": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.runnable_exec_date_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.task_concurrency_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.trigger_rule_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.ti_deps.deps.valid_state_dep": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.typing_compat": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.cli": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.code_utils": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.compression": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.configuration": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.dag_processing": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.dates": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.decorators": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.dot_renderer": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.email": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.file": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.helpers": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.json": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.log": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.log.file_task_handler": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.log.json_formatter": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.log.logging_mixin": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.mixins": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.module_loading": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.net": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.operator_helpers": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.operator_resources": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.platform": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.sqlalchemy": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.state": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.strings": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.timeout": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.timezone": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.trigger_rule": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.utils.weight_rule": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.version": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www.app": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www.forms": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www.utils": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www.validators": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "airflow.www.views": {
   "__set__": true,
   "elements": [
    "airflow"
   ]
  },
  "alembic": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "analytics": {
   "__set__": true,
   "elements": [
    "analytics-python"
   ]
  },
  "apache_beam": {
   "__set__": true,
   "elements": [
    "apache-beam"
   ]
  },
  "argcomplete": {
   "__set__": true,
   "elements": [
    "argcomplete"
   ]
  },
  "arrow": {
   "__set__": true,
   "elements": [
    "arrow"
   ]
  },
  "attr": {
   "__set__": true,
   "elements": [
    "attrs",
    "black",
    "pyamg"
   ]
  },
  "azure": {
   "__set__": true,
   "elements": [
    "azure-cli-core",
    "azure-cli-telemetry",
    "azure-cosmos",
    "azure-devops",
    "azure-keyvault",
    "azure-mgmt-datalake-store",
    "azure-mgmt-keyvault",
    "azure-mgmt-msi",
    "azure-mgmt-resource",
    "azure-nspkg",
    "azure-storage-blob",
    "azure-storage-common",
    "azure-storage-file",
    "azure-storage-queue"
   ]
  },
  "azure.common": {
   "__set__": true,
   "elements": [
    "azure-common"
   ]
  },
  "azure.common.client_factory": {
   "__set__": true,
   "elements": [
    "azure-common"
   ]
  },
  "azure.common.credentials": {
   "__set__": true,
   "elements": [
    "azure-common"
   ]
  },
  "azure.core.exceptions": {
   "__set__": true,
   "elements": [
    "azure-core"
   ]
  },
  "azure.cosmos.cosmos_client": {
   "__set__": true,
   "elements": [
    "azure-cosmos"
   ]
  },
  "azure.cosmos.errors": {
   "__set__": true,
   "elements": [
    "azure-cosmos"
   ]
  },
  "azure.datalake.store": {
   "__set__": true,
   "elements": [
    "azure-datalake-store"
   ]
  },
  "azure.identity": {
   "__set__": true,
   "elements": [
    "azure-identity"
   ]
  },
  "azure.keyvault.secrets": {
   "__set__": true,
   "elements": [
    "azure-keyvault-secrets"
   ]
  },
  "azure.mgmt": {
   "__set__": true,
   "elements": [
    "azure-mgmt-datalake-store",
    "azure-mgmt-keyvault",
    "azure-mgmt-msi",
    "azure-mgmt-nspkg",
    "azure-mgmt-resource"
   ]
  },
  "azure.storage.blob": {
   "__set__": true,
   "elements": [
    "azure-storage",
    "azure-storage-blob"
   ]
  },
  "azure.storage.file": {
   "__set__": true,
   "elements": [
    "azure-storage",
    "azure-storage-file"
   ]
  },
  "boto3": {
   "__set__": true,
   "elements": [
    "boto3"
   ]
  },
  "boto3.s3.transfer": {
   "__set__": true,
   "elements": [
    "boto3"
   ]
  },
  "botocore": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "botocore.client": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "botocore.config": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "botocore.credentials": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "botocore.exceptions": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "botocore.paginate": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "botocore.session": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "botocore.waiter": {
   "__set__": true,
   "elements": [
    "botocore"
   ]
  },
  "bowler": {
   "__set__": true,
   "elements": [
    "bowler"
   ]
  },
  "bs4": {
   "__set__": true,
   "elements": [
    "beautifulsoup4"
   ]
  },
  "bson": {
   "__set__": true,
   "elements": [
    "bson",
    "pymongo"
   ]
  },
  "cached_property": {
   "__set__": true,
   "elements": [
    "cached-property",
    "cached_property"
   ]
  },
  "cassandra.auth": {
   "__set__": true,
   "elements": [
    "cassandra-driver"
   ]
  },
  "cassandra.cluster": {
   "__set__": true,
   "elements": [
    "cassandra-driver"
   ]
  },
  "cassandra.policies": {
   "__set__": true,
   "elements": [
    "cassandra-driver"
   ]
  },
  "cassandra.util": {
   "__set__": true,
   "elements": [
    "cassandra-driver"
   ]
  },
  "cattr": {
   "__set__": true,
   "elements": [
    "cattrs"
   ]
  },
  "celery": {
   "__set__": true,
   "elements": [
    "celery"
   ]
  },
  "celery.app": {
   "__set__": true,
   "elements": [
    "celery"
   ]
  },
  "celery.backends.base": {
   "__set__": true,
   "elements": [
    "celery"
   ]
  },
  "celery.backends.database": {
   "__set__": true,
   "elements": [
    "celery"
   ]
  },
  "celery.bin": {
   "__set__": true,
   "elements": [
    "celery"
   ]
  },
  "celery.result": {
   "__set__": true,
   "elements": [
    "celery"
   ]
  },
  "celery.signals": {
   "__set__": true,
   "elements": [
    "celery"
   ]
  },
  "cgroupspy": {
   "__set__": true,
   "elements": [
    "cgroupspy"
   ]
  },
  "cloudant": {
   "__set__": true,
   "elements": [
    "cloudant"
   ]
  },
  "colorlog": {
   "__set__": true,
   "elements": [
    "colorlog"
   ]
  },
  "colorlog.escape_codes": {
   "__set__": true,
   "elements": [
    "colorlog"
   ]
  },
  "connexion": {
   "__set__": true,
   "elements": [
    "connexion"
   ]
  },
  "croniter": {
   "__set__": true,
   "elements": [
    "croniter"
   ]
  },
  "cryptography.fernet": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.backends": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cx_Oracle": {
   "__set__": true,
   "elements": [
    "cx_oracle"
   ]
  },
  "daemon": {
   "__set__": true,
   "elements": [
    "python-daemon"
   ]
  },
  "daemon.pidfile": {
   "__set__": true,
   "elements": [
    "python-daemon"
   ]
  },
  "datadog": {
   "__set__": true,
   "elements": [
    "datadog"
   ]
  },
  "dateutil": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jupyter_kernel_test",
    "python-dateutil"
   ]
  },
  "dateutil.relativedelta": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jupyter_kernel_test",
    "python-dateutil"
   ]
  },
  "dateutil.tz": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jupyter_kernel_test",
    "python-dateutil"
   ]
  },
  "dev": {
   "__set__": true,
   "elements": [
    "brian2",
    "prov"
   ]
  },
  "dill": {
   "__set__": true,
   "elements": [
    "dill"
   ]
  },
  "distributed": {
   "__set__": true,
   "elements": [
    "distributed"
   ]
  },
  "distributed.security": {
   "__set__": true,
   "elements": [
    "distributed"
   ]
  },
  "docker": {
   "__set__": true,
   "elements": [
    "docker-py"
   ]
  },
  "docker.errors": {
   "__set__": true,
   "elements": [
    "docker-py"
   ]
  },
  "elasticsearch": {
   "__set__": true,
   "elements": [
    "elasticsearch"
   ]
  },
  "elasticsearch_dsl": {
   "__set__": true,
   "elements": [
    "elasticsearch-dsl"
   ]
  },
  "facebook_business.adobjects.adaccount": {
   "__set__": true,
   "elements": [
    "facebook_business"
   ]
  },
  "facebook_business.adobjects.adreportrun": {
   "__set__": true,
   "elements": [
    "facebook_business"
   ]
  },
  "facebook_business.adobjects.adsinsights": {
   "__set__": true,
   "elements": [
    "facebook_business"
   ]
  },
  "facebook_business.api": {
   "__set__": true,
   "elements": [
    "facebook_business"
   ]
  },
  "fissix.fixer_util": {
   "__set__": true,
   "elements": [
    "fissix"
   ]
  },
  "fissix.pytree": {
   "__set__": true,
   "elements": [
    "fissix"
   ]
  },
  "flask": {
   "__set__": true,
   "elements": [
    "flask",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jedi",
    "signac-dashboard"
   ]
  },
  "flask.json": {
   "__set__": true,
   "elements": [
    "flask",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "signac-dashboard"
   ]
  },
  "flask_appbuilder": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.actions": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.const": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.fieldwidgets": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.forms": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.models.sqla": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.models.sqla.filters": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.models.sqla.interface": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.security.manager": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.security.sqla": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.security.sqla.manager": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.security.sqla.models": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_appbuilder.widgets": {
   "__set__": true,
   "elements": [
    "flask-appbuilder"
   ]
  },
  "flask_babel": {
   "__set__": true,
   "elements": [
    "flask-babel"
   ]
  },
  "flask_caching": {
   "__set__": true,
   "elements": [
    "flask-caching"
   ]
  },
  "flask_login": {
   "__set__": true,
   "elements": [
    "flask-login"
   ]
  },
  "flask_wtf": {
   "__set__": true,
   "elements": [
    "flask-wtf"
   ]
  },
  "flask_wtf.csrf": {
   "__set__": true,
   "elements": [
    "flask-wtf"
   ]
  },
  "flower.command": {
   "__set__": true,
   "elements": [
    "flower"
   ]
  },
  "future.backports.urllib.parse": {
   "__set__": true,
   "elements": [
    "future"
   ]
  },
  "github3": {
   "__set__": true,
   "elements": [
    "github3.py"
   ]
  },
  "google.api_core": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.client_info": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.exceptions": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.gapic_v1.client_info": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.gapic_v1.method": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.operation": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.page_iterator": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.path_template": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.api_core.retry": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth._default": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth.credentials": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth.environment_vars": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth.exceptions": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth.transport": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.auth.transport.requests": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.cloud.automl_v1beta1": {
   "__set__": true,
   "elements": [
    "google-cloud-automl"
   ]
  },
  "google.cloud.automl_v1beta1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-automl"
   ]
  },
  "google.cloud.bigquery": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery",
    "google-cloud-bigquery-core"
   ]
  },
  "google.cloud.bigquery.dataset": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery",
    "google-cloud-bigquery-core"
   ]
  },
  "google.cloud.bigquery.table": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery",
    "google-cloud-bigquery-core"
   ]
  },
  "google.cloud.bigquery_datatransfer_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-datatransfer"
   ]
  },
  "google.cloud.bigquery_datatransfer_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-datatransfer"
   ]
  },
  "google.cloud.bigtable": {
   "__set__": true,
   "elements": [
    "google-cloud-bigtable"
   ]
  },
  "google.cloud.bigtable.cluster": {
   "__set__": true,
   "elements": [
    "google-cloud-bigtable"
   ]
  },
  "google.cloud.bigtable.column_family": {
   "__set__": true,
   "elements": [
    "google-cloud-bigtable"
   ]
  },
  "google.cloud.bigtable.instance": {
   "__set__": true,
   "elements": [
    "google-cloud-bigtable"
   ]
  },
  "google.cloud.bigtable.table": {
   "__set__": true,
   "elements": [
    "google-cloud-bigtable"
   ]
  },
  "google.cloud.bigtable_admin_v2": {
   "__set__": true,
   "elements": [
    "google-cloud-bigtable"
   ]
  },
  "google.cloud.container_v1.gapic.enums": {
   "__set__": true,
   "elements": [
    "google-cloud-container"
   ]
  },
  "google.cloud.container_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-container"
   ]
  },
  "google.cloud.dataproc_v1beta2": {
   "__set__": true,
   "elements": [
    "google-cloud-dataproc"
   ]
  },
  "google.cloud.dataproc_v1beta2.types": {
   "__set__": true,
   "elements": [
    "google-cloud-dataproc"
   ]
  },
  "google.cloud.dlp_v2": {
   "__set__": true,
   "elements": [
    "google-cloud-dlp"
   ]
  },
  "google.cloud.dlp_v2.types": {
   "__set__": true,
   "elements": [
    "google-cloud-dlp"
   ]
  },
  "google.cloud.kms_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-kms"
   ]
  },
  "google.cloud.language_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-language"
   ]
  },
  "google.cloud.language_v1.proto.language_service_pb2": {
   "__set__": true,
   "elements": [
    "google-cloud-language"
   ]
  },
  "google.cloud.language_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-language"
   ]
  },
  "google.cloud.logging.handlers.transports": {
   "__set__": true,
   "elements": [
    "google-cloud-logging"
   ]
  },
  "google.cloud.logging.resource": {
   "__set__": true,
   "elements": [
    "google-cloud-logging"
   ]
  },
  "google.cloud.oslogin_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-os-login"
   ]
  },
  "google.cloud.pubsub_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-pubsub"
   ]
  },
  "google.cloud.pubsub_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-pubsub"
   ]
  },
  "google.cloud.redis_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-redis"
   ]
  },
  "google.cloud.redis_v1.gapic.enums": {
   "__set__": true,
   "elements": [
    "google-cloud-redis"
   ]
  },
  "google.cloud.redis_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-redis"
   ]
  },
  "google.cloud.secretmanager_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-secret-manager"
   ]
  },
  "google.cloud.spanner_v1.client": {
   "__set__": true,
   "elements": [
    "google-cloud-spanner"
   ]
  },
  "google.cloud.spanner_v1.database": {
   "__set__": true,
   "elements": [
    "google-cloud-spanner"
   ]
  },
  "google.cloud.spanner_v1.instance": {
   "__set__": true,
   "elements": [
    "google-cloud-spanner"
   ]
  },
  "google.cloud.spanner_v1.transaction": {
   "__set__": true,
   "elements": [
    "google-cloud-spanner"
   ]
  },
  "google.cloud.texttospeech_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-texttospeech"
   ]
  },
  "google.cloud.texttospeech_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-texttospeech"
   ]
  },
  "google.cloud.translate_v2": {
   "__set__": true,
   "elements": [
    "google-cloud-translate"
   ]
  },
  "google.cloud.videointelligence_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-videointelligence"
   ]
  },
  "google.cloud.videointelligence_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-videointelligence"
   ]
  },
  "google.cloud.vision_v1": {
   "__set__": true,
   "elements": [
    "google-cloud-vision"
   ]
  },
  "google.cloud.vision_v1.types": {
   "__set__": true,
   "elements": [
    "google-cloud-vision"
   ]
  },
  "google.longrunning.operations_grpc_pb2": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "googleapis-common-protos"
   ]
  },
  "google.oauth2": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.oauth2.id_token": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.oauth2.service_account": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-auth",
    "google-cloud-bigquery-storage-core"
   ]
  },
  "google.protobuf": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "protobuf"
   ]
  },
  "google.protobuf.json_format": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "protobuf"
   ]
  },
  "google_auth_httplib2": {
   "__set__": true,
   "elements": [
    "google-auth-httplib2"
   ]
  },
  "googleapiclient": {
   "__set__": true,
   "elements": [
    "google-api-python-client"
   ]
  },
  "googleapiclient.discovery": {
   "__set__": true,
   "elements": [
    "google-api-python-client"
   ]
  },
  "googleapiclient.errors": {
   "__set__": true,
   "elements": [
    "google-api-python-client"
   ]
  },
  "googleapiclient.http": {
   "__set__": true,
   "elements": [
    "google-api-python-client"
   ]
  },
  "graphviz": {
   "__set__": true,
   "elements": [
    "python-graphviz"
   ]
  },
  "graphviz.dot": {
   "__set__": true,
   "elements": [
    "python-graphviz"
   ]
  },
  "grpc": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-storage-core",
    "grpcio"
   ]
  },
  "hdfs": {
   "__set__": true,
   "elements": [
    "python-hdfs"
   ]
  },
  "hvac": {
   "__set__": true,
   "elements": [
    "hvac"
   ]
  },
  "hvac.exceptions": {
   "__set__": true,
   "elements": [
    "hvac"
   ]
  },
  "itsdangerous": {
   "__set__": true,
   "elements": [
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "itsdangerous",
    "signac-dashboard"
   ]
  },
  "itsdangerous.exc": {
   "__set__": true,
   "elements": [
    "flask-creole",
    "flask-debugtoolbar",
    "itsdangerous"
   ]
  },
  "itsdangerous.url_safe": {
   "__set__": true,
   "elements": [
    "flask-creole",
    "flask-debugtoolbar",
    "itsdangerous"
   ]
  },
  "jaydebeapi": {
   "__set__": true,
   "elements": [
    "jaydebeapi"
   ]
  },
  "jenkins": {
   "__set__": true,
   "elements": [
    "python-jenkins"
   ]
  },
  "jinja2": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jinja2",
    "signac-dashboard"
   ]
  },
  "jinja2.utils": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jinja2",
    "signac-dashboard"
   ]
  },
  "jira": {
   "__set__": true,
   "elements": [
    "jira"
   ]
  },
  "jira.exceptions": {
   "__set__": true,
   "elements": [
    "jira"
   ]
  },
  "jira.resources": {
   "__set__": true,
   "elements": [
    "jira"
   ]
  },
  "json_merge_patch": {
   "__set__": true,
   "elements": [
    "json-merge-patch"
   ]
  },
  "jsonpath_ng": {
   "__set__": true,
   "elements": [
    "jsonpath-ng"
   ]
  },
  "jsonschema": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jsonschema"
   ]
  },
  "jsonschema.validators": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jsonschema"
   ]
  },
  "jwt": {
   "__set__": true,
   "elements": [
    "pyjwt"
   ]
  },
  "kerberos": {
   "__set__": true,
   "elements": [
    "pykerberos"
   ]
  },
  "kubernetes": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client.api_client": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client.models": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client.models.v1_pod": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.client.rest": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.config.exec_provider": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.config.kube_config": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "kubernetes.stream": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "lazy_object_proxy": {
   "__set__": true,
   "elements": [
    "lazy-object-proxy"
   ]
  },
  "lockfile.pidlockfile": {
   "__set__": true,
   "elements": [
    "lockfile"
   ]
  },
  "markdown": {
   "__set__": true,
   "elements": [
    "markdown"
   ]
  },
  "markupsafe": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "markupsafe",
    "signac-dashboard"
   ]
  },
  "marshmallow": {
   "__set__": true,
   "elements": [
    "marshmallow",
    "toastedmarshmallow"
   ]
  },
  "marshmallow.schema": {
   "__set__": true,
   "elements": [
    "marshmallow",
    "toastedmarshmallow"
   ]
  },
  "marshmallow.utils": {
   "__set__": true,
   "elements": [
    "marshmallow",
    "toastedmarshmallow"
   ]
  },
  "marshmallow_oneofschema": {
   "__set__": true,
   "elements": [
    "marshmallow-oneofschema"
   ]
  },
  "marshmallow_sqlalchemy": {
   "__set__": true,
   "elements": [
    "marshmallow-sqlalchemy"
   ]
  },
  "msrestazure.azure_exceptions": {
   "__set__": true,
   "elements": [
    "msrestazure"
   ]
  },
  "mypy.nodes": {
   "__set__": true,
   "elements": [
    "mypy"
   ]
  },
  "mypy.plugin": {
   "__set__": true,
   "elements": [
    "mypy"
   ]
  },
  "mypy.types": {
   "__set__": true,
   "elements": [
    "mypy"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "nvd3": {
   "__set__": true,
   "elements": [
    "python-nvd3"
   ]
  },
  "packaging.version": {
   "__set__": true,
   "elements": [
    "packaging"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "pandas_gbq": {
   "__set__": true,
   "elements": [
    "pandas-gbq"
   ]
  },
  "pandas_gbq.gbq": {
   "__set__": true,
   "elements": [
    "pandas-gbq"
   ]
  },
  "papermill": {
   "__set__": true,
   "elements": [
    "papermill"
   ]
  },
  "paramiko": {
   "__set__": true,
   "elements": [
    "paramiko"
   ]
  },
  "paramiko.config": {
   "__set__": true,
   "elements": [
    "paramiko"
   ]
  },
  "pendulum": {
   "__set__": true,
   "elements": [
    "pendulum"
   ]
  },
  "pendulum.datetime": {
   "__set__": true,
   "elements": [
    "pendulum"
   ]
  },
  "pendulum.parsing": {
   "__set__": true,
   "elements": [
    "pendulum"
   ]
  },
  "pendulum.tz.timezone": {
   "__set__": true,
   "elements": [
    "pendulum"
   ]
  },
  "psutil": {
   "__set__": true,
   "elements": [
    "psutil"
   ]
  },
  "psycopg2": {
   "__set__": true,
   "elements": [
    "psycopg2"
   ]
  },
  "psycopg2.extensions": {
   "__set__": true,
   "elements": [
    "psycopg2"
   ]
  },
  "psycopg2.extras": {
   "__set__": true,
   "elements": [
    "psycopg2"
   ]
  },
  "pydruid.db": {
   "__set__": true,
   "elements": [
    "pydruid"
   ]
  },
  "pyexasol": {
   "__set__": true,
   "elements": [
    "pyexasol"
   ]
  },
  "pygments": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pygments.formatters": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pygments.formatters.terminal": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pygments.formatters.terminal256": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pygments.lexers.configs": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pygments"
   ]
  },
  "pymongo": {
   "__set__": true,
   "elements": [
    "pymongo"
   ]
  },
  "pymssql": {
   "__set__": true,
   "elements": [
    "pymssql"
   ]
  },
  "pyodbc": {
   "__set__": true,
   "elements": [
    "pyodbc"
   ]
  },
  "pysftp": {
   "__set__": true,
   "elements": [
    "pysftp"
   ]
  },
  "pyspark.sql": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "qds_sdk.commands": {
   "__set__": true,
   "elements": [
    "qds-sdk"
   ]
  },
  "qds_sdk.qubole": {
   "__set__": true,
   "elements": [
    "qds-sdk"
   ]
  },
  "qds_sdk.sensors": {
   "__set__": true,
   "elements": [
    "qds-sdk"
   ]
  },
  "redis": {
   "__set__": true,
   "elements": [
    "redis-py"
   ]
  },
  "requests": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "requests.adapters": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "requests.auth": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "requests.exceptions": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "requests_kerberos": {
   "__set__": true,
   "elements": [
    "requests-kerberos"
   ]
  },
  "rich": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "rich.box": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "rich.console": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "rich.syntax": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "rich.table": {
   "__set__": true,
   "elements": [
    "rich"
   ]
  },
  "scrapbook": {
   "__set__": true,
   "elements": [
    "nteract-scrapbook",
    "scrapbook"
   ]
  },
  "sendgrid": {
   "__set__": true,
   "elements": [
    "sendgrid"
   ]
  },
  "sendgrid.helpers.mail": {
   "__set__": true,
   "elements": [
    "sendgrid"
   ]
  },
  "setproctitle": {
   "__set__": true,
   "elements": [
    "setproctitle"
   ]
  },
  "setup": {
   "__set__": true,
   "elements": [
    "flatten_json",
    "pycalverter",
    "pyjnius"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.command.develop": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.command.install": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "simple_salesforce": {
   "__set__": true,
   "elements": [
    "simple-salesforce"
   ]
  },
  "six": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "bleach",
    "dbxfs",
    "flask-rest-orm",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "happybase",
    "lldb",
    "privy",
    "pyamg",
    "pyscss",
    "rust",
    "signac-dashboard",
    "six"
   ]
  },
  "slack": {
   "__set__": true,
   "elements": [
    "slackclient"
   ]
  },
  "smbclient": {
   "__set__": true,
   "elements": [
    "pysmbclient",
    "smbprotocol"
   ]
  },
  "snowflake.connector": {
   "__set__": true,
   "elements": [
    "snowflake-connector-python"
   ]
  },
  "spython.main": {
   "__set__": true,
   "elements": [
    "spython"
   ]
  },
  "sqlalchemy": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.dialects": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.engine": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.engine.reflection": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.exc": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.ext.declarative": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.orm": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.orm.session": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.pool": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.sql": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.sql.elements": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.types": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy_jsonfield": {
   "__set__": true,
   "elements": [
    "sqlalchemy-jsonfield"
   ]
  },
  "sshtunnel": {
   "__set__": true,
   "elements": [
    "sshtunnel"
   ]
  },
  "tableauserverclient": {
   "__set__": true,
   "elements": [
    "tableauserverclient"
   ]
  },
  "tableauserverclient.server": {
   "__set__": true,
   "elements": [
    "tableauserverclient"
   ]
  },
  "tabulate": {
   "__set__": true,
   "elements": [
    "tabulate"
   ]
  },
  "telegram": {
   "__set__": true,
   "elements": [
    "python-telegram-bot"
   ]
  },
  "tenacity": {
   "__set__": true,
   "elements": [
    "tenacity"
   ]
  },
  "tests": {
   "__set__": true,
   "elements": [
    "ablog",
    "acorns",
    "adversarial-robustness-toolbox",
    "aesara",
    "aiida-core",
    "aiomysql",
    "airflow",
    "alive-progress",
    "amset",
    "andes",
    "arosics",
    "artificial-adversary",
    "astroid",
    "atlassian-python-api",
    "atom",
    "autouri",
    "awacs",
    "aws-parallelcluster",
    "awslogs",
    "bamnostic",
    "bar_chart_race",
    "baycomp",
    "benchmark-4dn",
    "biom-format",
    "birdy",
    "bqplot",
    "brainbox-ibl",
    "cachy",
    "cadquery",
    "caper",
    "cellpy",
    "chemex",
    "clisops",
    "cloudpathlib",
    "cmreshandler",
    "compaction",
    "crystals",
    "cyberpandas",
    "daops",
    "dataframe_image",
    "dbt",
    "dbxfs",
    "decaylanguage",
    "deepforest",
    "dexplot",
    "diffprivlib",
    "disk-objectstore",
    "django-controlcenter",
    "django-versatileimagefield",
    "djangocms-admin-style",
    "docker-map",
    "doppel-cli",
    "emperor",
    "esmlab",
    "eventkit",
    "explainerdashboard",
    "fair-research-login",
    "fasttsne",
    "ffx",
    "flask-restless",
    "flask-restplus",
    "flask-security-too",
    "flask_simplelogin",
    "geoarray",
    "ghost.py",
    "globus-cli",
    "globus-sdk",
    "glymur",
    "google-cloud-bigquery",
    "google-cloud-monitoring",
    "gpflow",
    "graspy",
    "graypy",
    "grayskull",
    "greedy",
    "gridtest",
    "hickle",
    "human-learn",
    "hydra-core",
    "hydrofunctions",
    "ibm_db",
    "igl",
    "inflect",
    "intake-accumulo",
    "intake-astro",
    "intake-avro",
    "intake-cmip",
    "intake-elasticsearch",
    "intake-esm",
    "intake-geopandas",
    "intake-iris",
    "intake-parquet",
    "intake-spark",
    "intake-xarray",
    "iohexperimenter",
    "ioos_qc",
    "ipygany",
    "ipywebrtc",
    "isofit",
    "jacqq",
    "jaws",
    "jigsawpy",
    "json5",
    "jsondate",
    "jupytab",
    "jupytab-server",
    "jupyter_server",
    "jupyter_telemetry",
    "jupyter_to_medium",
    "jupyterlab-git",
    "jupytext",
    "keras-radam",
    "kim-edn",
    "kim-property",
    "kim_edn",
    "kim_property",
    "labelme",
    "landlab",
    "larch",
    "lifelines",
    "llnl-sina",
    "magicgui",
    "magpylib",
    "markdown-it-py",
    "markov_draftjs",
    "matrixprofile",
    "memo",
    "mesa",
    "mf2",
    "mikeio",
    "mleap",
    "molsets",
    "moviepy",
    "movingpandas",
    "msal",
    "multiprocessing-logging",
    "nbclassic",
    "nbsmoke",
    "ncar-jobqueue",
    "neptune-client",
    "neptune-notebooks",
    "neurokit2",
    "neutronics_material_maker",
    "nr.types",
    "oceans",
    "oddt",
    "ogh",
    "onnx-caffe2",
    "ooipy",
    "optuna",
    "otwrapy",
    "overpy",
    "panda3d_viewer",
    "panedr",
    "param_persist",
    "pastel",
    "pathy",
    "pcdswidgets",
    "pfapack",
    "plantcv",
    "plasmaboundaries",
    "platformio",
    "plonk",
    "point_cloud_utils",
    "polyfempy",
    "polygon-geohasher",
    "portalocker",
    "poster",
    "privy",
    "propka",
    "py-tools-ds",
    "pyathena",
    "pybtex",
    "pycroscopy",
    "pycsep",
    "pydeck",
    "pygls",
    "pygments",
    "pygpcca",
    "pykafka",
    "pylama",
    "pyls-memestra",
    "pymapd",
    "pymapvbvd",
    "pymatsolver",
    "pyomeca",
    "pyomniscidb",
    "pyoos",
    "pyprocessmacro",
    "pyprojroot",
    "pyproprop",
    "pyrobuf",
    "pysentiment2",
    "pystac",
    "pytest-openfiles",
    "pytest-remotedata",
    "python-barcode",
    "python-lambda-4dn",
    "python-utils",
    "pytmc",
    "pyusid",
    "qhub",
    "qme",
    "quickle",
    "quilt",
    "quilt3",
    "reciprocalspaceship",
    "redis-semaphore",
    "rse",
    "saws",
    "scikit-lego",
    "scikit-time",
    "scrapy-contrib-bigexporters",
    "shtab",
    "skutil",
    "smdebug-rulesconfig",
    "spectate",
    "sphinx-js",
    "stanza",
    "stateplane",
    "stitchm",
    "stuf",
    "suds-jurko",
    "superset",
    "suspect",
    "swagger-django-generator",
    "swot_simulator",
    "terrainbento",
    "theano-pymc",
    "thredds_crawler",
    "tinydb",
    "tomlkit",
    "tranquilizer",
    "trio-aiohttp",
    "trio-asyncio",
    "trio_asyncio",
    "tsfresh",
    "typhos",
    "tyssue",
    "ukpopulation",
    "verta",
    "web.py",
    "wrighttools",
    "xclim",
    "xcube_geodb",
    "xsum",
    "yarg",
    "yodapy",
    "yodatools",
    "yt_astro_analysis"
   ]
  },
  "unicodecsv": {
   "__set__": true,
   "elements": [
    "unicodecsv"
   ]
  },
  "urllib3.exceptions": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "sentry-sdk",
    "urllib3"
   ]
  },
  "urllib3.util.retry": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "sentry-sdk",
    "urllib3"
   ]
  },
  "vertica_python": {
   "__set__": true,
   "elements": [
    "vertica-python"
   ]
  },
  "watchtower": {
   "__set__": true,
   "elements": [
    "watchtower"
   ]
  },
  "werkzeug": {
   "__set__": true,
   "elements": [
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "signac-dashboard",
    "werkzeug"
   ]
  },
  "werkzeug.middleware.dispatcher": {
   "__set__": true,
   "elements": [
    "werkzeug"
   ]
  },
  "werkzeug.middleware.proxy_fix": {
   "__set__": true,
   "elements": [
    "werkzeug"
   ]
  },
  "winrm.exceptions": {
   "__set__": true,
   "elements": [
    "pywinrm"
   ]
  },
  "winrm.protocol": {
   "__set__": true,
   "elements": [
    "pywinrm"
   ]
  },
  "wtforms": {
   "__set__": true,
   "elements": [
    "wtforms"
   ]
  },
  "wtforms.fields": {
   "__set__": true,
   "elements": [
    "wtforms"
   ]
  },
  "wtforms.validators": {
   "__set__": true,
   "elements": [
    "wtforms"
   ]
  },
  "wtforms.widgets": {
   "__set__": true,
   "elements": [
    "wtforms"
   ]
  },
  "yaml": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-storage-core",
    "pyyaml"
   ]
  }
 },
 "required no match": {}
}