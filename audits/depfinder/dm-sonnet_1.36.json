{
 "builtin": {},
 "questionable": {},
 "questionable no match": {},
 "required": {
  "absl": {
   "__set__": true,
   "elements": [
    "absl-py"
   ]
  },
  "absl.testing": {
   "__set__": true,
   "elements": [
    "absl-py"
   ]
  },
  "contextlib2": {
   "__set__": true,
   "elements": [
    "contextlib2"
   ]
  },
  "mock": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "mock"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "semantic_version": {
   "__set__": true,
   "elements": [
    "semantic_version"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.command.install": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "six": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "bleach",
    "dbxfs",
    "flask-rest-orm",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "happybase",
    "lldb",
    "privy",
    "pyamg",
    "pyscss",
    "rust",
    "signac-dashboard",
    "six"
   ]
  },
  "sonnet": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.protos": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.custom_getters": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.custom_getters.bayes_by_backprop": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.custom_getters.context": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.custom_getters.non_trainable": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.custom_getters.override_args": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.custom_getters.restore_initializer": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.custom_getters.stop_gradient": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.attention": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.base": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.base_errors": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.base_info": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.basic": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.basic_rnn": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.batch_norm": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.batch_norm_v2": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.clip_gradient": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.conv": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.embed": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.gated_rnn": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.layer_norm": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.moving_average": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.nets": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.nets.alexnet": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.nets.convnet": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.nets.dilation": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.nets.mlp": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.nets.transformer": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.nets.vqvae": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.optimization_constraints": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.pondering_rnn": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.relational_memory": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.residual": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.rnn_core": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.scale_gradient": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.sequential": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.spatial_transformer": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.spectral_normalization": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.modules.util": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.ops": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "sonnet.python.ops.initializers": {
   "__set__": true,
   "elements": [
    "dm-sonnet"
   ]
  },
  "tensorflow.compat": {
   "__set__": true,
   "elements": [
    "tensorflow"
   ]
  },
  "tensorflow.contrib": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.contrib.eager.python": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.client": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.framework": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.layers": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.ops": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.platform": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.training": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow.python.util": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  },
  "tensorflow_probability": {
   "__set__": true,
   "elements": [
    "tensorflow-probability"
   ]
  },
  "wrapt": {
   "__set__": true,
   "elements": [
    "wrapt"
   ]
  }
 },
 "required no match": {}
}