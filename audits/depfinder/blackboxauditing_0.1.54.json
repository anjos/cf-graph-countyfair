{
 "builtin": {},
 "questionable": {
  "BlackBoxAuditing.find_contexts": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "Orange": {
   "__set__": true,
   "elements": [
    "orange3"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "BlackBoxAuditing.GradientFeatureAuditor": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.audit_reading": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.consistency_graph": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.data": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.disparate_impact": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.experiments.arrests.load_data": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.find_contexts.expand_and_find_contexts": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.find_contexts.find_cn2_rules": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.loggers": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.measurements": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.model_factories": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.model_factories.AbstractModelFactory": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.model_factories.AbstractModelVisitor": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.model_factories.SKLearnModelVisitor": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.AbstractRepairer": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.CategoricRepairer": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.CategoricalFeature": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.GeneralRepairer": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.NumericRepairer": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.SparseList": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.binning.BinSizes": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.binning.Binner": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.repairers.calculators": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.splitters": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "BlackBoxAuditing.test_data": {
   "__set__": true,
   "elements": [
    "blackboxauditing"
   ]
  },
  "data": {
   "__set__": true,
   "elements": [
    "dateparser"
   ]
  },
  "matplotlib": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "matplotlib.pyplot": {
   "__set__": true,
   "elements": [
    "matplotlib",
    "matplotlib-base"
   ]
  },
  "networkx": {
   "__set__": true,
   "elements": [
    "networkx"
   ]
  },
  "networkx.algorithms.flow": {
   "__set__": true,
   "elements": [
    "networkx"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.command.develop": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.command.install": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "sklearn": {
   "__set__": true,
   "elements": [
    "scikit-learn"
   ]
  },
  "test_data": {
   "__set__": true,
   "elements": [
    "conda"
   ]
  }
 },
 "required no match": {}
}