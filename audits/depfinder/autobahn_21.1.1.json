{
 "builtin": {},
 "questionable": {
  "OpenSSL": {
   "__set__": true,
   "elements": [
    "pyopenssl"
   ]
  },
  "argon2": {
   "__set__": true,
   "elements": [
    "argon2-cffi",
    "argon2_cffi",
    "dbxfs",
    "privy"
   ]
  },
  "argon2.low_level": {
   "__set__": true,
   "elements": [
    "argon2-cffi",
    "argon2_cffi",
    "dbxfs",
    "privy"
   ]
  },
  "autobahn": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.twisted.component": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.cryptosign": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.serializer": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.compress_bzip2": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.compress_snappy": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._abi": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._blockchain": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._buyer": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._config": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_api_publish": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_base": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_catalog_create": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_channel_close": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_channel_open": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_consent": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_market_create": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_market_join": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_market_member_login": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_member_login": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._eip712_member_register": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._interfaces": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._mnemonic": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._schema": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._seller": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._util": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "colorama": {
   "__set__": true,
   "elements": [
    "colorama",
    "pyamg"
   ]
  },
  "eth_abi": {
   "__set__": true,
   "elements": [
    "eth-abi"
   ]
  },
  "eth_abi.grammar": {
   "__set__": true,
   "elements": [
    "eth-abi"
   ]
  },
  "flatbuffers": {
   "__set__": true,
   "elements": [
    "python-flatbuffers"
   ]
  },
  "flatbuffers.table": {
   "__set__": true,
   "elements": [
    "python-flatbuffers"
   ]
  },
  "msgpack": {
   "__set__": true,
   "elements": [
    "msgpack-python"
   ]
  },
  "nacl": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "nacl.encoding": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "nacl.public": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "nacl.utils": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "passlib.utils": {
   "__set__": true,
   "elements": [
    "passlib"
   ]
  },
  "pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "pytrie": {
   "__set__": true,
   "elements": [
    "pytrie"
   ]
  },
  "snappy": {
   "__set__": true,
   "elements": [
    "python-snappy"
   ]
  },
  "twisted.application.internet": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.application.reactors": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.conch.ssh.agent": {
   "__set__": true,
   "elements": [
    "twisted"
   ]
  },
  "twisted.internet": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.address": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.defer": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.endpoints": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.interfaces": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.iocpreactor": {
   "__set__": true,
   "elements": [
    "twisted"
   ]
  },
  "twisted.internet.protocol": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.ssl": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.stdio": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.task": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.threads": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.plugin": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.protocols.tls": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.python.reflect": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.web.error": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.web.resource": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "txaio": {
   "__set__": true,
   "elements": [
    "txaio"
   ]
  },
  "ubjson": {
   "__set__": true,
   "elements": [
    "py-ubjson"
   ]
  },
  "ujson": {
   "__set__": true,
   "elements": [
    "ujson"
   ]
  },
  "umsgpack": {
   "__set__": true,
   "elements": [
    "u-msgpack-python"
   ]
  },
  "web3.auto": {
   "__set__": true,
   "elements": [
    "web3"
   ]
  },
  "web3.middleware": {
   "__set__": true,
   "elements": [
    "web3"
   ]
  },
  "wsaccel.utf8validator": {
   "__set__": true,
   "elements": [
    "wsaccel"
   ]
  },
  "wsaccel.xormask": {
   "__set__": true,
   "elements": [
    "wsaccel"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "autobahn": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn._version": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.asyncio.rawsocket": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.asyncio.util": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.asyncio.wamp": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.asyncio.websocket": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.exception": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.nvx._utf8validator": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.rawsocket.util": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.twisted.choosereactor": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.twisted.rawsocket": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.twisted.util": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.twisted.wamp": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.twisted.websocket": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.util": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.auth": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.cryptosign": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.exception": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.gen.wamp.proto": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.gen.wamp.proto.MessageType": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.interfaces": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.protocol": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.request": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.role": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.serializer": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.types": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.wamp.uri": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.compress": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.compress_base": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.compress_deflate": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.interfaces": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.types": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.utf8validator": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.util": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.websocket.xormasker": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._abi": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._config": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "autobahn.xbr._util": {
   "__set__": true,
   "elements": [
    "autobahn"
   ]
  },
  "base58": {
   "__set__": true,
   "elements": [
    "base58"
   ]
  },
  "cffi": {
   "__set__": true,
   "elements": [
    "cffi",
    "dbxfs",
    "privy"
   ]
  },
  "click": {
   "__set__": true,
   "elements": [
    "black",
    "click",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "signac-dashboard"
   ]
  },
  "cryptography.hazmat.backends": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.kdf.pbkdf2": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "ecdsa.curves": {
   "__set__": true,
   "elements": [
    "ecdsa"
   ]
  },
  "eth_keys": {
   "__set__": true,
   "elements": [
    "eth-keys"
   ]
  },
  "eth_utils.conversions": {
   "__set__": true,
   "elements": [
    "eth-utils"
   ]
  },
  "flatbuffers": {
   "__set__": true,
   "elements": [
    "python-flatbuffers"
   ]
  },
  "hyperlink": {
   "__set__": true,
   "elements": [
    "hyperlink"
   ]
  },
  "jinja2": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jinja2",
    "signac-dashboard"
   ]
  },
  "nacl.exceptions": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "nacl.public": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "nacl.secret": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "nacl.utils": {
   "__set__": true,
   "elements": [
    "pynacl"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "pkg_resources": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "setuptools.command.test": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "snappy": {
   "__set__": true,
   "elements": [
    "python-snappy"
   ]
  },
  "twisted": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.application": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.application.service": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.address": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.defer": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.endpoints": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.error": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.interfaces": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.protocol": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.task": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.internet.threads": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.plugin": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.protocols.basic": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.protocols.policies": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.python": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.python.failure": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.web.resource": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "twisted.web.server": {
   "__set__": true,
   "elements": [
    "paraview",
    "twisted"
   ]
  },
  "txaio": {
   "__set__": true,
   "elements": [
    "txaio"
   ]
  },
  "web3": {
   "__set__": true,
   "elements": [
    "web3"
   ]
  },
  "zope.interface": {
   "__set__": true,
   "elements": [
    "zope.interface"
   ]
  }
 },
 "required no match": {}
}