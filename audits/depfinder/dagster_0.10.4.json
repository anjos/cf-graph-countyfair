{
 "builtin": {},
 "questionable": {
  "astroid": {
   "__set__": true,
   "elements": [
    "astroid"
   ]
  },
  "dagster": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.pipeline": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.workspace": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.workspace.autodiscovery": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.config_type": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.errors": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.field": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.validate": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.composition": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.decorators.composite_solid": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.dependency": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.events": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.executor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.hook": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.intermediate_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.job": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.logger": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.errors": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.events": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.events.log": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.api": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.context.init": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.context.system": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.inputs": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.objects": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.plan": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.step": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.resolve_versions": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.resources_init": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.executor.in_process": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.executor.init": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.executor.multiprocess": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.external": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.origin": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.instance": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.launcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.launcher.sync_in_memory_run_launcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.run_coordinator": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.scheduler": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.scheduler.job": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.snap": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.snap.execution_plan_snapshot": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.compute_log_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.event_log": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.event_log.sql_event_log": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.input_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.intermediate_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.mem_io_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.noop_compute_log_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.root": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.runs": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.runs.migration": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.runs.sql_run_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.schedules": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.system_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.test_utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.dagster_type": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.python_set": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.python_tuple": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.daemon.daemon": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.client": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.impl": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.server": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.server_watcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.types": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.primitive_mapping": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.seven": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.error": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.typing_api": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster_graphql.implementation.context": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.schema.errors": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "docstring_parser": {
   "__set__": true,
   "elements": [
    "docstring_parser"
   ]
  },
  "pathlib2": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pathlib2"
   ]
  },
  "psutil": {
   "__set__": true,
   "elements": [
    "psutil"
   ]
  },
  "pylint.checkers": {
   "__set__": true,
   "elements": [
    "pylint"
   ]
  },
  "pylint.interfaces": {
   "__set__": true,
   "elements": [
    "pylint"
   ]
  },
  "pytz": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "flask-rest-orm",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "pytz"
   ]
  }
 },
 "questionable no match": {},
 "required": {
  "alembic": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "alembic.command": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "alembic.config": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "alembic.script": {
   "__set__": true,
   "elements": [
    "alembic"
   ]
  },
  "click": {
   "__set__": true,
   "elements": [
    "black",
    "click",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "signac-dashboard"
   ]
  },
  "click.testing": {
   "__set__": true,
   "elements": [
    "black",
    "click",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "signac-dashboard"
   ]
  },
  "coloredlogs": {
   "__set__": true,
   "elements": [
    "coloredlogs"
   ]
  },
  "croniter": {
   "__set__": true,
   "elements": [
    "croniter"
   ]
  },
  "crontab": {
   "__set__": true,
   "elements": [
    "crontab",
    "python-crontab"
   ]
  },
  "cryptography.hazmat.backends": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "cryptography.hazmat.primitives.asymmetric": {
   "__set__": true,
   "elements": [
    "cryptography",
    "dbxfs",
    "privy"
   ]
  },
  "dagster": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.get_server_id": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.list_repositories": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.snapshot_execution_plan": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.snapshot_partition": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.snapshot_pipeline": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.snapshot_repository": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.snapshot_schedule": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.api.snapshot_sensor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.builtins": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.check": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.api": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.asset": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.config_scaffolder": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.debug": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.pipeline": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.run": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.schedule": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.sensor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.workspace": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.workspace.cli_target": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.workspace.config_schema": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.workspace.load": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.cli.workspace.workspace": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.config_schema": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.config_type": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.errors": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.evaluate_value_result": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.field": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.field_utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.iterate_types": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.snap": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.source": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.stack": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.type_printer": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.config.validate": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.code_pointer": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.debug": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.decorator_utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.composition": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.config": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.configurable": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.decorators": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.decorators.graph": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.decorators.hook": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.decorators.sensor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.definition_config_schema": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.dependency": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.environment_configs": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.events": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.executor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.graph": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.hook": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.intermediate_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.job": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.logger": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.mode": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.no_step_launcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.output": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.partition": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.pipeline": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.pipeline_base": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.reconstructable": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.resource": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.run_config_schema": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.schedule": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.sensor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.solid": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.step_launcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.definitions.utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.errors": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.events": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.events.log": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.api": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.compute_logs": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.context.compute": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.context.init": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.context.logger": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.context.system": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.context_creation_pipeline": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.execute": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.memoization": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.compute": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.execute_plan": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.execute_step": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.external_step": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.handle": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.inputs": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.objects": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.outputs": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.plan": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.step": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.plan.utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.resolve_versions": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.resources_init": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.results": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.retries": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.execution.stats": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.executor.base": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.executor.child_process_executor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.executor.init": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.external": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.external_data": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.grpc_server_state_subscriber": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.handle": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.origin": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.repository_location": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.represented": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.host_representation.selector": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.instance": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.instance.ref": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.launcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.launcher.base": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.launcher.default_run_launcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.launcher.sync_in_memory_run_launcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.log_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.origin": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.run_coordinator": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.scheduler": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.scheduler.job": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.scheduler.scheduler": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.selector": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.selector.subset_selector": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.snap": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.snap.dep_snapshot": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.snap.execution_plan_snapshot": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.snap.solid": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.compute_log_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.event_log": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.event_log.migration": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.event_log.sql_event_log": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.event_log.sqlite": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.file_cache": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.file_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.fs_io_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.init": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.input_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.intermediate_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.io_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.local_compute_log_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.mem_io_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.memoizable_io_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.migration.utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.noop_compute_log_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.object_store": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.output_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.pipeline_run": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.root": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.root_input_manager": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.runs": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.runs.sql_run_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.schedules": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.schedules.sqlite.sqlite_schedule_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.sql": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.sqlite": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.system_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.tags": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.storage.type_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.system_config.objects": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.telemetry": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.test_utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.config_schema": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.dagster_type": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.decorator": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.loadable_target_origin": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.marshal": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.python_dict": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.python_set": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.types.python_tuple": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.utility_solids": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.core.utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.daemon": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.daemon.cli": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.daemon.controller": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.daemon.daemon": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.daemon.run_coordinator.queued_run_coordinator_daemon": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.daemon.types": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.experimental": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.client": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.impl": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.server": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.server_watcher": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.types": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.grpc.utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.loggers": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.primitive_mapping": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.scheduler": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.scheduler.scheduler": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.scheduler.sensor": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.serdes": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.serdes.ipc": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.seven": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.seven.abc": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.backcompat": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.backoff": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.error": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.external": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.forked_pdb": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.hosted_user_process": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.indenting_printer": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.interrupts": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.log": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.merger": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.net": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.partitions": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.schedules": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.temp_file": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.test": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.test.postgres_instance": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.test.schedule_storage": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.timing": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.types": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.typing_api": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.utils.yaml_utils": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster.version": {
   "__set__": true,
   "elements": [
    "dagster"
   ]
  },
  "dagster_cron": {
   "__set__": true,
   "elements": [
    "dagster-cron",
    "dagster_cron"
   ]
  },
  "dagster_cron.version": {
   "__set__": true,
   "elements": [
    "dagster-cron",
    "dagster_cron"
   ]
  },
  "dagster_datadog": {
   "__set__": true,
   "elements": [
    "dagster-datadog",
    "dagster_datadog"
   ]
  },
  "dagster_datadog.version": {
   "__set__": true,
   "elements": [
    "dagster-datadog",
    "dagster_datadog"
   ]
  },
  "dagster_dbt": {
   "__set__": true,
   "elements": [
    "dagster-dbt",
    "dagster_dbt"
   ]
  },
  "dagster_dbt.errors": {
   "__set__": true,
   "elements": [
    "dagster-dbt"
   ]
  },
  "dagster_dbt.rpc.utils": {
   "__set__": true,
   "elements": [
    "dagster-dbt"
   ]
  },
  "dagster_dbt.version": {
   "__set__": true,
   "elements": [
    "dagster-dbt",
    "dagster_dbt"
   ]
  },
  "dagster_docker.version": {
   "__set__": true,
   "elements": [
    "dagster-docker"
   ]
  },
  "dagster_github": {
   "__set__": true,
   "elements": [
    "dagster-github"
   ]
  },
  "dagster_github.resources": {
   "__set__": true,
   "elements": [
    "dagster-github"
   ]
  },
  "dagster_github.version": {
   "__set__": true,
   "elements": [
    "dagster-github"
   ]
  },
  "dagster_graphql.cli": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.client.query": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.implementation.context": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.implementation.fetch_partition_sets": {
   "__set__": true,
   "elements": [
    "dagster-graphql"
   ]
  },
  "dagster_graphql.implementation.fetch_pipelines": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.implementation.fetch_runs": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.implementation.fetch_solids": {
   "__set__": true,
   "elements": [
    "dagster-graphql"
   ]
  },
  "dagster_graphql.implementation.utils": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.schema": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.schema.errors": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.test.preset_query": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.test.utils": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql.version": {
   "__set__": true,
   "elements": [
    "dagster-graphql",
    "dagster_graphql"
   ]
  },
  "dagster_graphql_tests.graphql.graphql_context_test_suite": {
   "__set__": true,
   "elements": [
    "dagster-graphql"
   ]
  },
  "dagster_k8s.job": {
   "__set__": true,
   "elements": [
    "dagster-k8s"
   ]
  },
  "dagster_pagerduty": {
   "__set__": true,
   "elements": [
    "dagster-pagerduty",
    "dagster_pagerduty"
   ]
  },
  "dagster_pagerduty.hooks": {
   "__set__": true,
   "elements": [
    "dagster-pagerduty"
   ]
  },
  "dagster_pagerduty.version": {
   "__set__": true,
   "elements": [
    "dagster-pagerduty",
    "dagster_pagerduty"
   ]
  },
  "dagster_pandas": {
   "__set__": true,
   "elements": [
    "dagster-pandas",
    "dagster_pandas"
   ]
  },
  "dagster_pandas.constraints": {
   "__set__": true,
   "elements": [
    "dagster-pandas"
   ]
  },
  "dagster_pandas.validation": {
   "__set__": true,
   "elements": [
    "dagster-pandas"
   ]
  },
  "dagster_papertrail": {
   "__set__": true,
   "elements": [
    "dagster-papertrail",
    "dagster_papertrail"
   ]
  },
  "dagster_papertrail.version": {
   "__set__": true,
   "elements": [
    "dagster-papertrail",
    "dagster_papertrail"
   ]
  },
  "dagster_postgres.event_log": {
   "__set__": true,
   "elements": [
    "dagster-postgres",
    "dagster_postgres"
   ]
  },
  "dagster_postgres.utils": {
   "__set__": true,
   "elements": [
    "dagster-postgres",
    "dagster_postgres"
   ]
  },
  "dagster_postgres.version": {
   "__set__": true,
   "elements": [
    "dagster-postgres",
    "dagster_postgres"
   ]
  },
  "dagster_prometheus": {
   "__set__": true,
   "elements": [
    "dagster-prometheus"
   ]
  },
  "dagster_prometheus.version": {
   "__set__": true,
   "elements": [
    "dagster-prometheus"
   ]
  },
  "dagster_shell": {
   "__set__": true,
   "elements": [
    "dagster-shell"
   ]
  },
  "dagster_shell.utils": {
   "__set__": true,
   "elements": [
    "dagster-shell"
   ]
  },
  "dagster_shell.version": {
   "__set__": true,
   "elements": [
    "dagster-shell"
   ]
  },
  "dagster_slack": {
   "__set__": true,
   "elements": [
    "dagster-slack",
    "dagster_slack"
   ]
  },
  "dagster_slack.hooks": {
   "__set__": true,
   "elements": [
    "dagster-slack"
   ]
  },
  "dagster_slack.version": {
   "__set__": true,
   "elements": [
    "dagster-slack",
    "dagster_slack"
   ]
  },
  "dagster_spark": {
   "__set__": true,
   "elements": [
    "dagster-spark",
    "dagster_spark"
   ]
  },
  "dagster_spark.utils": {
   "__set__": true,
   "elements": [
    "dagster-spark",
    "dagster_spark"
   ]
  },
  "dagster_ssh.resources": {
   "__set__": true,
   "elements": [
    "dagster-ssh",
    "dagster_ssh"
   ]
  },
  "dagster_ssh.version": {
   "__set__": true,
   "elements": [
    "dagster-ssh",
    "dagster_ssh"
   ]
  },
  "dagster_twilio": {
   "__set__": true,
   "elements": [
    "dagster-twilio",
    "dagster_twilio"
   ]
  },
  "dagster_twilio.version": {
   "__set__": true,
   "elements": [
    "dagster-twilio",
    "dagster_twilio"
   ]
  },
  "datadog": {
   "__set__": true,
   "elements": [
    "datadog"
   ]
  },
  "dateutil": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jupyter_kernel_test",
    "python-dateutil"
   ]
  },
  "dateutil.relativedelta": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "jupyter_kernel_test",
    "python-dateutil"
   ]
  },
  "docker": {
   "__set__": true,
   "elements": [
    "docker-py"
   ]
  },
  "docker_image": {
   "__set__": true,
   "elements": [
    "docker-image-py"
   ]
  },
  "flask": {
   "__set__": true,
   "elements": [
    "flask",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jedi",
    "signac-dashboard"
   ]
  },
  "flask_cors": {
   "__set__": true,
   "elements": [
    "flask-cors",
    "flask_cors"
   ]
  },
  "flask_graphql": {
   "__set__": true,
   "elements": [
    "flask-graphql"
   ]
  },
  "flask_sockets": {
   "__set__": true,
   "elements": [
    "flask-sockets"
   ]
  },
  "freezegun": {
   "__set__": true,
   "elements": [
    "freezegun"
   ]
  },
  "future.standard_library": {
   "__set__": true,
   "elements": [
    "future"
   ]
  },
  "future.utils": {
   "__set__": true,
   "elements": [
    "future"
   ]
  },
  "gevent": {
   "__set__": true,
   "elements": [
    "gevent"
   ]
  },
  "geventwebsocket.handler": {
   "__set__": true,
   "elements": [
    "gevent-websocket"
   ]
  },
  "google.protobuf": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "protobuf"
   ]
  },
  "graphene": {
   "__set__": true,
   "elements": [
    "graphene"
   ]
  },
  "graphene.types.generic": {
   "__set__": true,
   "elements": [
    "graphene"
   ]
  },
  "graphql": {
   "__set__": true,
   "elements": [
    "graphql-core"
   ]
  },
  "graphql.error.base": {
   "__set__": true,
   "elements": [
    "graphql-core"
   ]
  },
  "graphql.execution.base": {
   "__set__": true,
   "elements": [
    "graphql-core"
   ]
  },
  "graphql.execution.executors.gevent": {
   "__set__": true,
   "elements": [
    "graphql-core"
   ]
  },
  "graphql.execution.executors.sync": {
   "__set__": true,
   "elements": [
    "graphql-core"
   ]
  },
  "graphql_ws.constants": {
   "__set__": true,
   "elements": [
    "graphql-ws"
   ]
  },
  "graphql_ws.gevent": {
   "__set__": true,
   "elements": [
    "graphql-ws"
   ]
  },
  "grpc": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-storage-core",
    "grpcio"
   ]
  },
  "grpc_health.v1": {
   "__set__": true,
   "elements": [
    "grpcio-health-checking"
   ]
  },
  "grpc_health.v1.health_pb2_grpc": {
   "__set__": true,
   "elements": [
    "grpcio-health-checking"
   ]
  },
  "jwt": {
   "__set__": true,
   "elements": [
    "pyjwt"
   ]
  },
  "kubernetes": {
   "__set__": true,
   "elements": [
    "python-kubernetes"
   ]
  },
  "mock": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "mock"
   ]
  },
  "nbconvert": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "nbconvert"
   ]
  },
  "nbformat": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "nbformat"
   ]
  },
  "pandas": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "pandas.core.dtypes.common": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "pandas"
   ]
  },
  "paramiko": {
   "__set__": true,
   "elements": [
    "paramiko"
   ]
  },
  "paramiko.config": {
   "__set__": true,
   "elements": [
    "paramiko"
   ]
  },
  "pendulum": {
   "__set__": true,
   "elements": [
    "pendulum"
   ]
  },
  "pkg_resources": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "prometheus_client": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "prometheus_client"
   ]
  },
  "prometheus_client.exposition": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "prometheus_client"
   ]
  },
  "psycopg2": {
   "__set__": true,
   "elements": [
    "psycopg2"
   ]
  },
  "psycopg2.errorcodes": {
   "__set__": true,
   "elements": [
    "psycopg2"
   ]
  },
  "pypd": {
   "__set__": true,
   "elements": [
    "pypd"
   ]
  },
  "pyrsistent": {
   "__set__": true,
   "elements": [
    "pyrsistent"
   ]
  },
  "pytest": {
   "__set__": true,
   "elements": [
    "pyamg",
    "pytest"
   ]
  },
  "requests": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "requests.exceptions": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "responses": {
   "__set__": true,
   "elements": [
    "responses"
   ]
  },
  "rx": {
   "__set__": true,
   "elements": [
    "rx"
   ]
  },
  "rx.subjects": {
   "__set__": true,
   "elements": [
    "rx"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "slack": {
   "__set__": true,
   "elements": [
    "slackclient"
   ]
  },
  "snapshottest": {
   "__set__": true,
   "elements": [
    "snapshottest"
   ]
  },
  "sqlalchemy": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.engine": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sqlalchemy.pool": {
   "__set__": true,
   "elements": [
    "flask-rest-orm",
    "pymapd",
    "sqlalchemy"
   ]
  },
  "sshtunnel": {
   "__set__": true,
   "elements": [
    "sshtunnel"
   ]
  },
  "tabulate": {
   "__set__": true,
   "elements": [
    "tabulate"
   ]
  },
  "toposort": {
   "__set__": true,
   "elements": [
    "toposort"
   ]
  },
  "tqdm": {
   "__set__": true,
   "elements": [
    "tqdm"
   ]
  },
  "twilio.base.exceptions": {
   "__set__": true,
   "elements": [
    "twilio"
   ]
  },
  "twilio.rest": {
   "__set__": true,
   "elements": [
    "twilio"
   ]
  },
  "watchdog.events": {
   "__set__": true,
   "elements": [
    "watchdog"
   ]
  },
  "watchdog.observers": {
   "__set__": true,
   "elements": [
    "watchdog"
   ]
  },
  "watchdog.observers.polling": {
   "__set__": true,
   "elements": [
    "watchdog"
   ]
  },
  "watchdog.utils": {
   "__set__": true,
   "elements": [
    "watchdog"
   ]
  },
  "yaml": {
   "__set__": true,
   "elements": [
    "google-cloud-bigquery-storage-core",
    "pyyaml"
   ]
  }
 },
 "required no match": {}
}