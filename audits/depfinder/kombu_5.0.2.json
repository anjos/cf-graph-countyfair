{
 "builtin": {
  "__set__": true,
  "elements": [
   "_thread",
   "array",
   "base64",
   "bisect",
   "bz2",
   "cPickle",
   "codecs",
   "collections",
   "collections.abc",
   "contextlib",
   "copy",
   "datetime",
   "decimal",
   "difflib",
   "distutils.command.install",
   "distutils.core",
   "dummy_thread",
   "email",
   "email.mime.message",
   "errno",
   "fcntl",
   "fnmatch",
   "functools",
   "gettext",
   "heapq",
   "http.client",
   "httplib",
   "importlib",
   "inspect",
   "io",
   "itertools",
   "json",
   "logging",
   "logging.handlers",
   "lzma",
   "math",
   "mimetools",
   "multiprocessing.util",
   "numbers",
   "operator",
   "os",
   "pickle",
   "pprint",
   "queue",
   "random",
   "re",
   "select",
   "shutil",
   "socket",
   "ssl",
   "string",
   "sys",
   "tempfile",
   "thread",
   "threading",
   "time",
   "traceback",
   "types",
   "typing",
   "unittest.mock",
   "urllib",
   "urllib.parse",
   "urlparse",
   "uuid",
   "warnings",
   "weakref",
   "zlib"
  ]
 },
 "questionable": {
  "__set__": true,
  "elements": [
   "amqp",
   "azure-servicebus",
   "azure-storage",
   "backports",
   "billiard",
   "boto3",
   "botocore",
   "brotli-python",
   "django",
   "eventlet",
   "gevent",
   "importlib_metadata",
   "kazoo",
   "kombu",
   "librabbitmq",
   "msgpack-python",
   "pip",
   "pycurl",
   "pyro4",
   "pytest",
   "pytz",
   "pyyaml",
   "redis-py",
   "setuptools",
   "simplejson",
   "sqlalchemy",
   "zstandard"
  ]
 },
 "questionable no match": {
  "__set__": true,
  "elements": [
   "consul",
   "etcd",
   "pyrabbit",
   "pywintypes",
   "qpid",
   "qpid.messaging.exceptions",
   "qpidtoollibs",
   "softlayer_messaging",
   "softlayer_messaging.errors",
   "win32con",
   "win32file"
  ]
 },
 "required": {
  "__set__": true,
  "elements": [
   "amqp",
   "botocore",
   "case",
   "eventlet",
   "kombu",
   "librabbitmq",
   "pymongo",
   "pytest",
   "pytz",
   "setuptools",
   "sqlalchemy",
   "vine"
  ]
 },
 "required no match": {
  "__set__": true,
  "elements": [
   "t.mocks",
   "t.skip"
  ]
 }
}