{
 "builtin": {},
 "questionable": {},
 "questionable no match": {},
 "required": {
  "dill": {
   "__set__": true,
   "elements": [
    "dill"
   ]
  },
  "flask": {
   "__set__": true,
   "elements": [
    "flask",
    "flask-creole",
    "flask-debugtoolbar",
    "flask-rest-orm",
    "jedi",
    "signac-dashboard"
   ]
  },
  "google.protobuf": {
   "__set__": true,
   "elements": [
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "protobuf"
   ]
  },
  "numpy": {
   "__set__": true,
   "elements": [
    "autovizwidget",
    "inkscape",
    "numcodecs",
    "numpy"
   ]
  },
  "pyspark": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.context": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.base": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.feature": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.linalg": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.param": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.param.shared": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.pipeline": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.util": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.ml.wrapper": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "pyspark.sql": {
   "__set__": true,
   "elements": [
    "pyspark"
   ]
  },
  "requests": {
   "__set__": true,
   "elements": [
    "apache-libcloud",
    "autovizwidget",
    "dbxfs",
    "google-api-core",
    "google-cloud-bigquery-storage-core",
    "requests"
   ]
  },
  "setuptools": {
   "__set__": true,
   "elements": [
    "setuptools"
   ]
  },
  "sparkflow.HogwildSparkModel": {
   "__set__": true,
   "elements": [
    "sparkflow"
   ]
  },
  "sparkflow.RWLock": {
   "__set__": true,
   "elements": [
    "sparkflow"
   ]
  },
  "sparkflow.ml_util": {
   "__set__": true,
   "elements": [
    "sparkflow"
   ]
  },
  "sparkflow.pipeline_util": {
   "__set__": true,
   "elements": [
    "sparkflow"
   ]
  },
  "sparkflow.tensorflow_async": {
   "__set__": true,
   "elements": [
    "sparkflow"
   ]
  },
  "tensorflow": {
   "__set__": true,
   "elements": [
    "tensorflow",
    "tensorflow-base"
   ]
  }
 },
 "required no match": {}
}